{"version":3,"sources":["./dev/js/stats/stats.meta-data.js","./dev/js/stats/stats.render.js","./dev/js/stats/stats.controls.js","./dev/js/stats/stats.operators.data.js","./dev/js/stats/stats.map.data.js","./dev/js/stats/stats.api.js","./dev/js/stats/stats.map.render.js","./dev/js/stats/stats.operators.render.js","./dev/js/stats/stats.operators.chart.js","./dev/js/stats/stats.js"],"names":["R6MStatsMetaData","R6MLangTerms","undefined","getDescriptionFn","terms","ellipsisString","stats","ellipsis","name1","name2","DEV_MODE","console","error","result","objectiveRoomDivider","removeBreakTags","MAX_CHAR_LENGTH","length","substring","getData","mapRooms","getDesc","seasons","5","name","roles","attackers","tableHeaderAttackers","nameSingular","tableHeaderAttackersSingular","cssClass","defenders","tableHeaderDefenders","tableHeaderDefendersSingular","statTypes","pickRate","tableHeaderPickRate","displayType","chartBeginAtZero","winRate","tableHeaderWinRate","survivalRate","tableHeaderSurvivalRate","killsPerDeath","tableHeaderKillsPerDeath","killsPerRound","tableHeaderKillsPerRound","totalPlays","tableHeaderTotalRounds","showTotal","disableChart","platforms","PC","seasonSpan","pc","XONE","xboxone","PS4","ps4","modes","BOMB","objectives","bomb","HOSTAGE","hostage","SECURE AREA","secure","ranks","Unranked","unranked","Copper","copper","Bronze","bronze","Silver","silver","Gold","gold","Platinum","platinum","Diamond","diamond","winReasons","allTeamsDead","statsRoundWinReasons","color","attackersEliminated","attackersKilledHostage","attackersSurrendered","bombDeactivated_OneBomb","bombExploded","defendersEliminated","defendersKilledHostage","defendersSurrendered","defuserDeactivated","hostageExtracted","noEnemies","objectiveCaptured","objectiveProtected","timeExpired","operators","BOPE-CAPITAO","capitao","G.E.O.-JACKAL","jackal","GIGN-MONTAGNE","montagne","GIGN-RESERVE","gignRecruit","GIGN-TWITCH","twitch","GSG9-BLITZ","blitz","GSG9-IQ","iq","GSG9-RESERVE","gsg9Recruit","JTF2-BUCK","buck","NAVYSEAL-BLACKBEARD","blackbeard","SAS-RESERVE","sasRecruit","SAS-SLEDGE","sledge","SAS-THATCHER","thatcher","SAT-HIBANA","hibana","SPETSNAZ-FUZE","fuze","SPETSNAZ-GLAZ","glaz","SPETSNAZ-RESERVE","spetsnazRecruit","SWAT-ASH","ash","SWAT-RESERVE","swatRecruit","SWAT-THERMITE","thermite","BOPE-CAVEIRA","caveira","G.E.O.-MIRA","mira","GIGN-DOC","doc","GIGN-ROOK","rook","GSG9-BANDIT","bandit","GSG9-JAGER","jager","JTF2-FROST","frost","NAVYSEAL-VALKYRIE","valkyrie","SAS-MUTE","mute","SAS-SMOKE","smoke","SAT-ECHO","echo","SPETSNAZ-KAPKAN","kapkan","SPETSNAZ-TACHANKA","tachanka","SWAT-CASTLE","castle","SWAT-PULSE","pulse","mapModeLocations","BANK","mapNames","bank","LOCKERS / CCTV ROOM","lockers","CCTVRoom","STAFF ROOM / OPEN AREA","staffRoom","openArea","TELLERS' OFFICE / ARCHIVES","tellersOffice","archives","CEO OFFICE","CEOOffice","STAFF ROOM","TELLER'S OFFICE","VAULT","vault","ARCHIVES","LOCKERS","OPEN AREA","BARTLETT U.","bartlett","CLASSROOM / LIBRARY","classroom","upperLibrary","KITCHEN / PIANO ROOM","kitchen","pianoRoom","READING ROOM / LIBRARY","readingRoom","lowerLibrary","ROWING MUSEUM / TROPHY ROOM","rowingMuseum","trophyRoom","KITCHEN","LIBRARY","MAIN OFFICE","mainOffice","TROPHY ROOM","CLASSROOM","LOUNGE","lounge","MODEL HALL","modelHall","BORDER","border","ARMORY LOCKERS / ARCHIVES","armoryLockers","BATHROOM / TELLERS","bathroom","tellers","CUSTOMS INSPECTIONS / SUPPLY ROOM","customsInspection","supplyRoom","VENTILATION ROOM / WORKSHOP","ventilationRoom","workshop","CUSTOMS INSPECTIONS","OFFICES","offices","SECURITY ROOM","securityRoom","WORKSHOP","ARMORY LOCKERS","TELLERS","CHALET","chalet","BAR / GAMING ROOM","bar","gamingRoom","KITCHEN / TROPHY ROOM","MASTER BEDROOM / OFFICE","masterBedroom","office","WINE CELLAR / SNOWMOBILE GARAGE","wineCellar","snowmobileGarage","library","MASTER BEDROOM","WINE CELLAR","BAR","DINING ROOM","diningRoom","SNOWMOBILE GARAGE","CLUB HOUSE","club","BAR / STOCK ROOM","stockRoom","CCTV ROOM / CASH ROOM","cashRoom","CHURCH / ARSENAL ROOM","church","arsenalRoom","GYM / BEDROOM","gym","bedroom","BEDROOM","CASH ROOM","CHURCH","STRIP CLUB","stripClub","ARSENAL ROOM","BAR BACKSTORE","GARAGE","garage","COASTLINE","coastline","1F BLUE BAR / 1F SUNRISE BAR","blueBar","sunriseBar","1F KITCHEN / 1F SERVICE ENTRANCE","serviceEntrance","2F HOOKAH LOUNGE / 2F BILLIARDS ROOM","hookahLounge","billiardsRoom","2F PENTHOUSE / 2F THEATER","penthouse","theater","1F BLUE BAR","1F KITCHEN","2F THEATER","2F VIP LOUNGE","vipLounge","2F BILLIARDS ROOM","2F PENTHOUSE","CONSULATE","consulate","CONSUL OFFICE / MEEETING ROOM","consulateOffice","meetingRoom","GARAGE / CAFETERIA","cafeteria","LOBBY / PRESS ROOM","lobby","pressRoom","ADMINISTRATION OFFICE","administrationOffice","CONSUL OFFICE","VISA OFFICE","visaOffice","FAVELAS","favela","1F BIKER'S APARTMENT / 1F BIKER'S BEDROOM","bikersApartment","bikersBedroom","2F AUNT'S BEDROOM / 1F AUNT'S APARTMENT","auntsBedroom","auntsApartment","2F FOOTBALL BEDROOM / 2F FOOTBALL OFFICE","footballBedroom","footballOffice","3F PACKAGING ROOM / 2F METH LAB","packagingRoom","methLab","1F BIKER'S APARTMENT","2F AUNT'S BEDROOM","2F GROW ROOM","growRoom","3F PACKAGING ROOM","1F ARMORY ROOM","armoryRoom","1F AUNT'S APARTMENT","2F FOOTBALL APARTMENT","footballApartment","HEREFORD BASE","hereford","BRIEFING ROOM / ARMORY","briefingRoom","armory","DINING ROOM / KIDS BEDROOM","kidsBedroom","DUMMY DEPOT / STORAGE","dummyDepot","storage","TV ROOM / KITCHEN","TVRoom","ARMORY","STORAGE","HOUSE","house","KID'S BEDROOM / WORKSHOP","LIVING ROOM / TRAINING ROOM","livingRoom","trainingRoom","TRAINING ROOM / GARAGE","LAUNDRY ROOM","laundryRoom","KID'S BEDROOM","LIVING ROOM","KAFE DOSTOYEVSKY","kafe","BAR / COCKTAIL LOUNGE","cocktailLounge","FIREPLACE HALL / MINING ROOM","fireplaceHall","miningRoom","KITCHEN PREP / BAKERY","kitchenPrep","bakery","barBackstore","KITCHEN GRILL","kitchenGrill","READING ROOM","TRAIN MUSEUM","trainMuseum","CIGAR LOUNGE","cigarLounge","KITCHEN PREP","KANAL","kanal","COAST GUARD OFFICE / HOLDING ROOM","coastGuardOffice","holdingRoom","KITCHEN / PROJECTOR ROOM","projectorRoom","SERVER ROOM / CONTROL ROOM","serverRoom","controlRoom","BOAT SUPPLIES","boatSupplies","COAST GUARD OFFICE","CONTROL ROOM","MAPS OFFICE","mapsOffice","SERVER ROOM","OREGON","oregon","KIDS DORMS / DORMS MAIN HALL","kidsDorm","dormMainHall","KITCHEN / DINING HALL","diningHall","LAUDRY ROOM / SUPPLY ROOM","REAR STAGE / WATCH TOWER","rearStage","watchTower","DORMS MAIN HALL","MEETING HALL","meetingHall","SUPPLY","DINING HALL","PLANE","plane","CARGO HOLD / LUGGAGE HOLD","cargoHold","luggageHold","MEETING ROOM / EXECUTIVE OFFICE","executiveOffice","STAFF SECTION / EXECUTIVE BEDROOM","staffSection","executiveBedroom","EXECUTIVE BEDROOM","LUGGAGE HOLD","MEETING ROOM","PRESS SECTION A","pressSectionA","STAFF SECTION","SKYSCRAPER","skyscraper","1F BBQ / 1F KITCHEN","bbq","1F BEDROOM / 1F BATHROOM","2F EXHIBITION / 2F WORK OFFICE","exhibition","workOffice","2F KARAOKE / 2F TEA ROOM","karaoke","teaRoom","1F BEDROOM","2F GEISHA ROOM","geishaRoom","2F WORK OFFICE","1F BBQ","2F TEA ROOM","YACHT","yacht","CAFETERIA / STAFF DORMITORY","staffDormitory","KITCHEN / ENGINE CONTROL","engineControl","MAPS ROOM / COCKPIT","mapsRoom","cockpit","SERVER ROOM / ENGINE STORAGE","engineStorage","CAFETERIA","CASINO","casino","ENGINE","engine","MAPS ROOM","AKLARK SUB ROOM","borealSubRoom","COCKPIT","R6MStatsRender","ALL_KEY","statTerms","locales","ch","thousands","decimal","cs","de","es","fr","it","ja","pt","ru","localeDefault","getFormattedNumber","num","options","separator","locale","getLoadedLang","split","toFixed","Math","round","disableLocale","replace","minimal","percentageFormat","toString","renderAbout","$aboutEl","html","aboutLinksHeader","aboutR6MapsHome","aboutR6MapsAbout","aboutBasedOnUbisoft","renderHeaders","$headers","main","find","headerMainBeta","filters","headerFilters","mapSection","headerMap","opSection","headerOperators","renderStaticEl","$allParagraphs","$instructionParagraphs","allOption","instructions","renderLoadError","$outputEl","renderLoadInfo","$infoEl","filterInfo","metaData","infoLine1","infoLine2","seasonText","season","platformText","platform","mapText","map","modeText","mode","locationText","location","loadedInfoLine1SinglePlatform","loadedInfoLine1AllPlatforms","loadedInfoLine2SingleMapAllModes","loadedInfoLine2AllMapsSingleMode","loadedInfoLine2SingleMapSingleModeAllLocations","loadedInfoLine2SingleMapSingleModeSingleLocation","loadedInfoLine2AllMapsAllModes","setPageTitle","document","title","titleBeta","R6MStatsControls","locationsGet","$locationsControl","val","locationsUpdate","mapModeLocationsData","selectedSeason","selectedMap","selectedGameMode","$locationsSelect","startingValue","remove","$locationsControls","optionsCount","append","$","attr","text","objectiveLocation","info","parent","addClass","removeClass","locationsPopulateOptions","trySelect","mapsGet","$mapsControl","mapsUpdate","$mapsSelect","mapOptions","push","value","sort","x","y","forEach","mapsPopulateOptions","modesGet","$modesControl","modesUpdate","modesData","$modesSelect","modesPopulateOptions","platformsGet","$platformsControl","platformsUpdate","platformsData","$platformsSelect","platformsPopulateOptions","ranksGet","$ranksControl","each","index","input","ranksTrySelect","rankOptions","rank","prop","$controlEl","option","R6MHelpers","trySelectOption","locations","get","setup","objectiveLocationChangeCb","labelObjectiveLocation","on","event","update","maps","mapChangeCb","labelMap","modeChangeCb","labelGameMode","platformChangeCb","labelPlatform","ranksData","rankChangeCb","currentSelectedRanks","srData","key","ranksPopulateOptions","$seasonsControl","seasonsData","seasonChangeCb","$seasonsSelect","labelSeason","seasonKey","seasonsPopulateOptions","R6MStatsOpData","opStats","sortInfo","field","isDescending","getOpRoleStats","apiOpData","totalRounds","opMetaData","opRoleStats","totalPlaysByRank","totalPlaysAllRanks","opKey","newOpStats","statsByRank","statsAllRanks","totalKills","totalDeaths","totalWins","warning","rankKey","opRankStats","apiOpRankData","statKey","setTallies","setWarnings","averagesTotals","count","sarKey","all","total","avg","sbrKey","operator","getAveragesTotals","setTalliesForRank","min","max","trySortRole","sortField","optionalRank","a","b","aValue","bValue","nameCompare","reverse","set","apiData","role","Attacker","Defender","trySort","R6MStatsMapData","mapStats","checkEmptyData","mapApiData","winRole","getMapRoleStats","mapRoleApiData","winReasonsMetaData","winReason","winReasonMeta","mapRoleStats","totalRoundsWon","averageRoundLength","averageRoundDuration","winReasonKey","percent","overallStats","overall","winPercent","getTotalRoundsFromApiData","R6MStatsApi","getMapAndOperators","mapSuccessCb","mapErrorCb","opSuccessCb","opErrorCb","allSuccessCb","queryString","mapCall","ajax","url","type","dataType","timeout","fail","opCall","when","then","opApiData","R6MStatsMapRender","updateWinReasonCharts","getFormattedNumberFn","$canvas","labels","backgroundColor","roleKey","data","datasets","Chart","maintainAspectRatio","responsive","legend","display","tooltips","titleFontSize","titleMarginBottom","bodyFontSize","render","noResults","headerWinReasons","numFormatFn","numberSeconds","totalRoundsPlayed","numberRounds","R6MStatsOpRender","getAveragesTotalsHtml","ranksMetaData","statTypesMetaData","ranksForSeason","roleCssClass","avgTotalKey","averagesAndTotals","getMainHeaderHtml","ranksShownCount","headerText","chartClass","chartIcon","getOpRoleHtml","opStatsForRole","warningTitleTag","warningCssClass","tableFewRoundsNote","getSubHeaderHtml","sortOrder","curSortClass","isCurSortCol","tableHeaderName","tableHeaderAllRanks","setupSortColumns","sortCb","$source","target","setupStatHeaders","statGraphCb","rolesMetaData","getOpHtml","tableNoteHeader","tableNoteHeaders","tableNoteWarningText","tableNotePickRate","R6MStatsOpChart","updateOpRoleChart","$opChartEls","renderLoadInfoFn","$header","statTypeMetaData","header","chartHeader","output","opDataSet","newCanvas","width","height","ctx","label","borderWidth","borderColor","fill","pointRadius","fontSize","scales","yAxes","ticks","beginAtZero","xAxes","window","$loadButton","$ranksShowHider","$sections","$outputs","$controls","$opChart","lastLoadSnapshot","QUERY_PARAMS","SEASON","PLATFORM","MAP","MODE","LOCATION","tryLoadStartingLanguage","tryLoadLanguage","tryChangeDirection","getLoadedDirection","assignPageElements","setupControls","setupOpChart","onpopstate","handleHistoryPop","checkAnyParamsSet","handleLoadButtonClick","ops","root","dialog","close","param","closeOpChart","enableLoadControl","handleGameModeChange","handleApiAllSuccess","activeElement","blur","handleApiMapSuccess","log","handleApiMapError","mapData","handleApiOpSuccess","tryLoadOpSortField","renderOpStats","handleApiOpError","operatorsData","possibleParams","string","currentValue","counter","history","pushState","protocol","host","pathname","join","sd","getSkillRanksForSeason","empty","savePlatformOption","sendLoadStatsAnalyticsEvent","handleMapChange","handleSeasonChange","handleSkillRankChange","selectedSkillRanks","saveSkillRankOptions","resortOperators","sortRank","saveOperatorsSortField","localStorage","setItem","platformOption","tryLoadSavedPlatformOption","tryLoadSavedSkillRankOptions","loadButtonText","e","ga","hitType","eventCategory","eventAction","eventLabel","skillKey","tempSplit","sortFieldOptions","getItem","previouslySelectedSkillRanks","pagecode","jQuery"],"mappings":"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","file":"./site/js/release.2.4.1/stats.min.js.map","sourcesContent":["'use strict';\n\nvar R6MStatsMetaData = (function(R6MLangTerms, undefined){\n  var getMapStatsData = function getMapStatsData() {\n    var terms = R6MLangTerms.terms,\n      mapRooms = terms.mapRooms,\n      getDesc = getDescriptionFn(terms);\n\n    return {\n      seasons: {\n        5: { name: terms.seasons['5'] }\n      },\n      roles: {\n        attackers: { name: terms.stats.tableHeaderAttackers, nameSingular: terms.stats.tableHeaderAttackersSingular, cssClass: 'attackers' },\n        defenders: { name: terms.stats.tableHeaderDefenders, nameSingular: terms.stats.tableHeaderDefendersSingular, cssClass: 'defenders' }\n      },\n      statTypes: { //  for operators output\n        pickRate: { name: terms.stats.tableHeaderPickRate, displayType: 'percent', chartBeginAtZero: true },\n        winRate: { name: terms.stats.tableHeaderWinRate, displayType: 'percent', chartBeginAtZero: false },\n        survivalRate: { name: terms.stats.tableHeaderSurvivalRate, displayType: 'percent', chartBeginAtZero: false },\n        killsPerDeath: { name: terms.stats.tableHeaderKillsPerDeath, displayType: 'ratio', chartBeginAtZero: false },\n        killsPerRound: { name: terms.stats.tableHeaderKillsPerRound, displayType: 'ratio', chartBeginAtZero: false },\n        totalPlays: { name: terms.stats.tableHeaderTotalRounds, displayType: 'number', showTotal: true, disableChart: true }\n      },\n      platforms: {\n        PC: { seasonSpan: [5,99], name: terms.platforms.pc },\n        XONE: { seasonSpan: [5,99], name: terms.platforms.xboxone },\n        PS4: { seasonSpan: [5,99], name: terms.platforms.ps4 }\n      },\n      modes: {\n        BOMB: { seasonSpan: [5,99], name: terms.objectives.bomb },\n        HOSTAGE: { seasonSpan: [5,99], name: terms.objectives.hostage },\n        'SECURE AREA': { seasonSpan: [5,99], name: terms.objectives.secure }\n      },\n      ranks: {\n        Unranked: { seasonSpan: [5,99], name: terms.ranks.unranked, cssClass: 'unranked' },\n        Copper: { seasonSpan: [5,99], name: terms.ranks.copper, cssClass: 'copper' },\n        Bronze: { seasonSpan: [5,99], name: terms.ranks.bronze, cssClass: 'bronze' },\n        Silver: { seasonSpan: [5,99], name: terms.ranks.silver, cssClass: 'silver' },\n        Gold: { seasonSpan: [5,99], name: terms.ranks.gold, cssClass: 'gold' },\n        Platinum: { seasonSpan: [5,99], name: terms.ranks.platinum, cssClass: 'platinum' },\n        Diamond: { seasonSpan: [5,99], name: terms.ranks.diamond, cssClass: 'diamond' }\n      },\n      winReasons: { // no need for season span verification\n        allTeamsDead: { name: terms.statsRoundWinReasons.allTeamsDead, cssClass: 'all-dead', color: '#90717b' },\n        attackersEliminated: { name: terms.statsRoundWinReasons.attackersEliminated, cssClass: 'eliminated', color: '#406282' },\n        attackersKilledHostage: { name: terms.statsRoundWinReasons.attackersKilledHostage, cssClass: 'hostage-killed', color: '#a12128' },\n        attackersSurrendered: { name: terms.statsRoundWinReasons.attackersSurrendered, cssClass: 'surrendered', color: '#000' },\n        bombDeactivated_OneBomb: { name: terms.statsRoundWinReasons.bombDeactivated_OneBomb, cssClass: 'bomb-deactivated', color: '#521a7f' },\n        bombExploded: { name: terms.statsRoundWinReasons.bombExploded, cssClass: 'bomb-exploded', color: '#d15f33' },\n        defendersEliminated: { name: terms.statsRoundWinReasons.defendersEliminated, cssClass: 'eliminated', color: '#406282' },\n        defendersKilledHostage: { name: terms.statsRoundWinReasons.defendersKilledHostage, cssClass: 'hostage-killed', color: '#a12128' },\n        defendersSurrendered: { name: terms.statsRoundWinReasons.defendersSurrendered, cssClass: 'surrendered', color: '#000' },\n        defuserDeactivated: { name: terms.statsRoundWinReasons.defuserDeactivated, cssClass: 'defuser-deactivated', color: '#521a7f' },\n        hostageExtracted: { name: terms.statsRoundWinReasons.hostageExtracted, cssClass: 'hostage-rescued', color: '#bf9632' },\n        noEnemies: { name: terms.statsRoundWinReasons.noEnemies, cssClass: 'no-enemies', color: '#808080' },\n        objectiveCaptured: { name: terms.statsRoundWinReasons.objectiveCaptured, cssClass: 'secured', color: '#4f8c41' },\n        objectiveProtected: { name: terms.statsRoundWinReasons.objectiveProtected, cssClass: 'defended', color: '#4f8c41' },\n        timeExpired: { name: terms.statsRoundWinReasons.timeExpired, cssClass: 'time', color: '#f2c438' }\n      },\n      operators: { // probably no need for season span verification\n        'BOPE-CAPITAO': { name: terms.operators.capitao, cssClass: 'capitao', color: '#4f8c41' },\n        'G.E.O.-JACKAL': { name: terms.operators.jackal, cssClass: 'jackal', color: '#521a7f' },\n        'GIGN-MONTAGNE': { name: terms.operators.montagne, cssClass: 'montagne', color: '#406282' },\n        'GIGN-RESERVE': { name: terms.operators.gignRecruit, cssClass: 'gign-recruit', color: '#000' },\n        'GIGN-TWITCH': { name: terms.operators.twitch, cssClass: 'twitch', color: '#406282' },\n        'GSG9-BLITZ': { name: terms.operators.blitz, cssClass: 'blitz', color: '#f2c438' },\n        'GSG9-IQ': { name: terms.operators.iq, cssClass: 'iq', color: '#f2c438' },\n        'GSG9-RESERVE': { name: terms.operators.gsg9Recruit, cssClass: 'gsg9-recruit', color: '#000' },\n        'JTF2-BUCK': { name: terms.operators.buck, cssClass: 'buck', color: '#257b9f' },\n        'NAVYSEAL-BLACKBEARD': { name: terms.operators.blackbeard, cssClass: 'blackbeard', color: '#bf9632' },\n        'SAS-RESERVE': { name: terms.operators.sasRecruit, cssClass: 'sas-recruit', color: '#000' },\n        'SAS-SLEDGE': { name: terms.operators.sledge, cssClass: 'sledge', color: '#90717b' },\n        'SAS-THATCHER': { name: terms.operators.thatcher, cssClass: 'thatcher', color: '#90717b' },\n        'SAT-HIBANA': { name: terms.operators.hibana, cssClass: 'hibana', color: '#942a43' },\n        'SPETSNAZ-FUZE': { name: terms.operators.fuze, cssClass: 'fuze', color: '#a12128' },\n        'SPETSNAZ-GLAZ': { name: terms.operators.glaz, cssClass: 'glaz', color: '#a12128' },\n        'SPETSNAZ-RESERVE': { name: terms.operators.spetsnazRecruit, cssClass: 'spetsnaz-recruit', color: '#000' },\n        'SWAT-ASH': { name: terms.operators.ash, cssClass: 'ash', color: '#d15f33' },\n        'SWAT-RESERVE': { name: terms.operators.swatRecruit, cssClass: 'swat-recruit', color: '#000' },\n        'SWAT-THERMITE': { name: terms.operators.thermite, cssClass: 'thermite', color: '#d15f33' },\n        'BOPE-CAVEIRA': { name: terms.operators.caveira, cssClass: 'caveira', color: '#4f8c41' },\n        'G.E.O.-MIRA': { name: terms.operators.mira, cssClass: 'mira', color: '#521a7f' },\n        'GIGN-DOC': { name: terms.operators.doc, cssClass: 'doc', color: '#406282' },\n        'GIGN-ROOK': { name: terms.operators.rook, cssClass: 'rook', color: '#406282' },\n        'GSG9-BANDIT': { name: terms.operators.bandit, cssClass: 'bandit', color: '#f2c438' },\n        'GSG9-JAGER': { name: terms.operators.jager, cssClass: 'jager', color: '#f2c438' },\n        'JTF2-FROST': { name: terms.operators.frost, cssClass: 'frost', color: '#257b9f' },\n        'NAVYSEAL-VALKYRIE': { name: terms.operators.valkyrie, cssClass: 'valkyrie', color: '#bf9632' },\n        'SAS-MUTE': { name: terms.operators.mute, cssClass: 'mute', color: '#90717b' },\n        'SAS-SMOKE': { name: terms.operators.smoke, cssClass: 'smoke', color: '#90717b' },\n        'SAT-ECHO': { name: terms.operators.echo, cssClass: 'echo', color: '#942a43' },\n        'SPETSNAZ-KAPKAN': { name: terms.operators.kapkan, cssClass: 'kapkan', color: '#a12128' },\n        'SPETSNAZ-TACHANKA': { name: terms.operators.tachanka, cssClass: 'tachanka', color: '#a12128' },\n        'SWAT-CASTLE': { name: terms.operators.castle, cssClass: 'castle', color: '#d15f33' },\n        'SWAT-PULSE': { name: terms.operators.pulse, cssClass: 'pulse', color: '#d15f33' }\n      },\n      mapModeLocations: {\n        BANK: {\n          name: terms.mapNames.bank,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'LOCKERS / CCTV ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.lockers, mapRooms.bank.CCTVRoom) },\n              'STAFF ROOM / OPEN AREA': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.staffRoom, mapRooms.bank.openArea) },\n              'TELLERS\\' OFFICE / ARCHIVES': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.tellersOffice, mapRooms.bank.archives) }\n            },\n            HOSTAGE: {\n              'CEO OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.CEOOffice) },\n              'STAFF ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.staffRoom) },\n              'TELLER\\'S OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.tellersOffice) },\n              VAULT: { seasonSpan: [5,99], name: getDesc(mapRooms.bank.vault) }\n            },\n            'SECURE AREA': {\n              ARCHIVES: { seasonSpan: [5,99], name: getDesc(mapRooms.bank.archives) },\n              'CEO OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.CEOOffice) },\n              LOCKERS: { seasonSpan: [5,99], name: getDesc(mapRooms.bank.lockers) },\n              'OPEN AREA': { seasonSpan: [5,99], name: getDesc(mapRooms.bank.openArea) }\n            }\n          }\n        },\n        'BARTLETT U.': {\n          name: terms.mapNames.bartlett,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'CLASSROOM / LIBRARY': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.classroom, mapRooms.bartlett.upperLibrary) },\n              'KITCHEN / PIANO ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.kitchen, mapRooms.bartlett.pianoRoom) },\n              'READING ROOM / LIBRARY': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.readingRoom, mapRooms.bartlett.lowerLibrary) },\n              'ROWING MUSEUM / TROPHY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.rowingMuseum, mapRooms.bartlett.trophyRoom) }\n            },\n            HOSTAGE: {\n              KITCHEN: { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.kitchen) },\n              LIBRARY: { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.upperLibrary) },\n              'MAIN OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.mainOffice) },\n              'TROPHY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.trophyRoom) }\n            },\n            'SECURE AREA': {\n              CLASSROOM: { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.classroom) },\n              LIBRARY: { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.upperLibrary) },\n              LOUNGE: { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.lounge) },\n              'MODEL HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.bartlett.modelHall) }\n            }\n          }\n        },\n        BORDER: {\n          name: terms.mapNames.border,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'ARMORY LOCKERS / ARCHIVES': { seasonSpan: [5,99], name: getDesc(mapRooms.border.armoryLockers, mapRooms.border.archives) },\n              'BATHROOM / TELLERS': { seasonSpan: [5,99], name: getDesc(mapRooms.border.bathroom, mapRooms.border.tellers) },\n              'CUSTOMS INSPECTIONS / SUPPLY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.border.customsInspection, mapRooms.border.supplyRoom) },\n              'VENTILATION ROOM / WORKSHOP': { seasonSpan: [5,99], name: getDesc(mapRooms.border.ventilationRoom, mapRooms.border.workshop) }\n            },\n            HOSTAGE: {\n              'CUSTOMS INSPECTIONS': { seasonSpan: [5,99], name: getDesc(mapRooms.border.customsInspection) },\n              OFFICES: { seasonSpan: [5,99], name: getDesc(mapRooms.border.offices) },\n              'SECURITY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.border.securityRoom) },\n              WORKSHOP: { seasonSpan: [5,99], name: getDesc(mapRooms.border.workshop) }\n            },\n            'SECURE AREA': {\n              'ARMORY LOCKERS': { seasonSpan: [5,99], name: getDesc(mapRooms.border.armoryLockers) },\n              OFFICES: { seasonSpan: [5,99], name: getDesc(mapRooms.border.offices) },\n              TELLERS: { seasonSpan: [5,99], name: getDesc(mapRooms.border.tellers) },\n              WORKSHOP: { seasonSpan: [5,99], name: getDesc(mapRooms.border.workshop) }\n            }\n          }\n        },\n        CHALET: {\n          name: terms.mapNames.chalet,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'BAR / GAMING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.bar, mapRooms.chalet.gamingRoom) },\n              'KITCHEN / TROPHY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.kitchen, mapRooms.chalet.trophyRoom) },\n              'MASTER BEDROOM / OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.masterBedroom, mapRooms.chalet.office) },\n              'WINE CELLAR / SNOWMOBILE GARAGE': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.wineCellar, mapRooms.chalet.snowmobileGarage) }\n            },\n            HOSTAGE: {\n              KITCHEN: { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.kitchen) },\n              LIBRARY: { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.library) },\n              'MASTER BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.masterBedroom) },\n              'WINE CELLAR': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.wineCellar) }\n            },\n            'SECURE AREA': {\n              BAR: { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.bar) },\n              'DINING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.diningRoom) },\n              LIBRARY: { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.library) },\n              'SNOWMOBILE GARAGE': { seasonSpan: [5,99], name: getDesc(mapRooms.chalet.snowmobileGarage) }\n            }\n          }\n        },\n        'CLUB HOUSE': {\n          name: terms.mapNames.club,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'BAR / STOCK ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.bar, mapRooms.club.stockRoom) },\n              'CCTV ROOM / CASH ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.CCTVRoom, mapRooms.club.cashRoom) },\n              'CHURCH / ARSENAL ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.church, mapRooms.club.arsenalRoom) },\n              'GYM / BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.gym, mapRooms.club.bedroom) }\n            },\n            HOSTAGE: {\n              BEDROOM: { seasonSpan: [5,99], name: getDesc(mapRooms.club.bedroom) },\n              'CASH ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.cashRoom) },\n              CHURCH: { seasonSpan: [5,99], name: getDesc(mapRooms.club.church) },\n              'STRIP CLUB': { seasonSpan: [5,99], name: getDesc(mapRooms.club.stripClub) }\n            },\n            'SECURE AREA': {\n              'ARSENAL ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.club.arsenalRoom) },\n              'BAR BACKSTORE': { seasonSpan: [5,99], name: getDesc(mapRooms.club.bar) },\n              BEDROOM: { seasonSpan: [5,99], name: getDesc(mapRooms.club.bedroom) },\n              GARAGE: { seasonSpan: [5,99], name: getDesc(mapRooms.club.garage) }\n            }\n          }\n        },\n        COASTLINE: {\n          name: terms.mapNames.coastline,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              '1F BLUE BAR / 1F SUNRISE BAR': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.blueBar, mapRooms.coastline.sunriseBar) },\n              '1F KITCHEN / 1F SERVICE ENTRANCE': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.kitchen, mapRooms.coastline.serviceEntrance) },\n              '2F HOOKAH LOUNGE / 2F BILLIARDS ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.hookahLounge, mapRooms.coastline.billiardsRoom) },\n              '2F PENTHOUSE / 2F THEATER': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.penthouse, mapRooms.coastline.theater) }\n            },\n            HOSTAGE: {\n              '1F BLUE BAR': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.blueBar) },\n              '1F KITCHEN': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.kitchen) },\n              '2F THEATER': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.theater) },\n              '2F VIP LOUNGE': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.vipLounge) }\n            },\n            'SECURE AREA': {\n              '1F BLUE BAR': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.blueBar) },\n              '1F KITCHEN': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.kitchen) },\n              '2F BILLIARDS ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.billiardsRoom) },\n              '2F PENTHOUSE': { seasonSpan: [5,99], name: getDesc(mapRooms.coastline.penthouse) }\n            }\n          }\n        },\n        CONSULATE: {\n          name: terms.mapNames.consulate,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'CONSUL OFFICE / MEEETING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.consulateOffice, mapRooms.consulate.meetingRoom) },\n              'GARAGE / CAFETERIA': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.garage, mapRooms.consulate.cafeteria) },\n              'LOBBY / PRESS ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.lobby, mapRooms.consulate.pressRoom) }\n            },\n            HOSTAGE: {\n              'ADMINISTRATION OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.administrationOffice) },\n              ARCHIVES: { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.archives) },\n              'CONSUL OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.consulateOffice) },\n              TELLERS: { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.tellers) }\n            },\n            'SECURE AREA': {\n              'ADMINISTRATION OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.administrationOffice) },\n              ARCHIVES: { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.archives) },\n              GARAGE: { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.garage) },\n              'VISA OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.consulate.visaOffice) }\n            }\n          }\n        },\n        FAVELAS: {\n          name: terms.mapNames.favela,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              '1F BIKER\\'S APARTMENT / 1F BIKER\\'S BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.bikersApartment, mapRooms.favela.bikersBedroom) },\n              '2F AUNT\\'S BEDROOM / 1F AUNT\\'S APARTMENT': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.auntsBedroom, mapRooms.favela.auntsApartment) },\n              '2F FOOTBALL BEDROOM / 2F FOOTBALL OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.footballBedroom, mapRooms.favela.footballOffice) },\n              '3F PACKAGING ROOM / 2F METH LAB': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.packagingRoom, mapRooms.favela.methLab) }\n            },\n            HOSTAGE: {\n              '1F BIKER\\'S APARTMENT': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.bikersApartment) },\n              '2F AUNT\\'S BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.auntsBedroom) },\n              '2F GROW ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.growRoom) },\n              '3F PACKAGING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.packagingRoom) }\n            },\n            'SECURE AREA': {\n              '1F ARMORY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.armoryRoom) },\n              '1F AUNT\\'S APARTMENT': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.auntsApartment) },\n              '2F FOOTBALL APARTMENT': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.footballApartment) },\n              '3F PACKAGING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.favela.packagingRoom) }\n            }\n          }\n        },\n        'HEREFORD BASE': {\n          name: terms.mapNames.hereford,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'BRIEFING ROOM / ARMORY': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.briefingRoom, mapRooms.hereford.armory) },\n              'DINING ROOM / KIDS BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.diningRoom, mapRooms.hereford.kidsBedroom) },\n              'DUMMY DEPOT / STORAGE': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.dummyDepot, mapRooms.hereford.storage) },\n              'TV ROOM / KITCHEN': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.TVRoom, mapRooms.hereford.kitchen) }\n            },\n            HOSTAGE: {\n              ARMORY: { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.armory) },\n              KITCHEN: { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.kitchen) },\n              'MASTER BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.masterBedroom) },\n              STORAGE: { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.storage) }\n            },\n            'SECURE AREA': {\n              ARMORY: { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.armory) },\n              'DINING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.diningRoom) },\n              'MASTER BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.masterBedroom) },\n              WORKSHOP: { seasonSpan: [5,99], name: getDesc(mapRooms.hereford.workshop) }\n            }\n          }\n        },\n        HOUSE: {\n          name: terms.mapNames.house,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'KID\\'S BEDROOM / WORKSHOP': { seasonSpan: [5,99], name: getDesc(mapRooms.house.kidsBedroom, mapRooms.house.workshop) },\n              'LIVING ROOM / TRAINING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.livingRoom, mapRooms.house.trainingRoom) },\n              'TRAINING ROOM / GARAGE': { seasonSpan: [5,99], name: getDesc(mapRooms.house.trainingRoom, mapRooms.house.garage) }\n            },\n            HOSTAGE: {\n              'DINING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.diningRoom) },\n              'LAUNDRY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.laundryRoom) },\n              'MASTER BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.masterBedroom) },\n              WORKSHOP: { seasonSpan: [5,99], name: getDesc(mapRooms.house.workshop) }\n            },\n            'SECURE AREA': {\n              GARAGE: { seasonSpan: [5,99], name: getDesc(mapRooms.house.garage) },\n              'KID\\'S BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.kidsBedroom) },\n              'LIVING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.livingRoom) },\n              'MASTER BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.house.masterBedroom) }\n            }\n          }\n        },\n        'KAFE DOSTOYEVSKY': {\n          name: terms.mapNames.kafe,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'BAR / COCKTAIL LOUNGE': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.bar, mapRooms.kafe.cocktailLounge) },\n              'FIREPLACE HALL / MINING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.fireplaceHall, mapRooms.kafe.miningRoom) },\n              'KITCHEN PREP / BAKERY': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.kitchenPrep, mapRooms.kafe.bakery) }\n            },\n            HOSTAGE: {\n              'BAR BACKSTORE': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.barBackstore) },\n              'KITCHEN GRILL': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.kitchenGrill) },\n              'READING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.readingRoom) },\n              'TRAIN MUSEUM': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.trainMuseum) }\n            },\n            'SECURE AREA': {\n              'CIGAR LOUNGE': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.cigarLounge) },\n              'KITCHEN PREP': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.kitchenPrep) },\n              'READING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.readingRoom) },\n              'TRAIN MUSEUM': { seasonSpan: [5,99], name: getDesc(mapRooms.kafe.trainMuseum) }\n            }\n          }\n        },\n        KANAL: {\n          name: terms.mapNames.kanal,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'COAST GUARD OFFICE / HOLDING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.coastGuardOffice, mapRooms.kanal.holdingRoom) },\n              'KITCHEN / PROJECTOR ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.kitchen, mapRooms.kanal.projectorRoom) },\n              'SERVER ROOM / CONTROL ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.serverRoom, mapRooms.kanal.controlRoom) }\n            },\n            HOSTAGE: {\n              'BOAT SUPPLIES': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.boatSupplies) },\n              'COAST GUARD OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.coastGuardOffice) },\n              'CONTROL ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.controlRoom) },\n              'MAPS OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.mapsOffice) }\n            },\n            'SECURE AREA': {\n              'BOAT SUPPLIES': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.boatSupplies) },\n              'COAST GUARD OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.coastGuardOffice) },\n              'MAPS OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.mapsOffice) },\n              'SERVER ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.kanal.serverRoom) }\n            }\n          }\n        },\n        OREGON: {\n          name: terms.mapNames.oregon,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'KIDS DORMS / DORMS MAIN HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.kidsDorm, mapRooms.oregon.dormMainHall) },\n              'KITCHEN / DINING HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.kitchen, mapRooms.oregon.diningHall) },\n              'LAUDRY ROOM / SUPPLY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.laundryRoom, mapRooms.oregon.supplyRoom) },\n              'REAR STAGE / WATCH TOWER': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.rearStage, mapRooms.oregon.watchTower) }\n            },\n            HOSTAGE: {\n              'DORMS MAIN HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.dormMainHall) },\n              KITCHEN: { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.kitchen) },\n              'MEETING HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.meetingHall) },\n              SUPPLY: { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.supplyRoom) }\n            },\n            'SECURE AREA': {\n              'DINING HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.diningHall) },\n              'DORMS MAIN HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.dormMainHall) },\n              'LAUNDRY ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.laundryRoom) },\n              'MEETING HALL': { seasonSpan: [5,99], name: getDesc(mapRooms.oregon.meetingHall) }\n            }\n          }\n        },\n        PLANE: {\n          name: terms.mapNames.plane,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'CARGO HOLD / LUGGAGE HOLD': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.cargoHold, mapRooms.plane.luggageHold) },\n              'MEETING ROOM / EXECUTIVE OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.meetingRoom, mapRooms.plane.executiveOffice) },\n              'STAFF SECTION / EXECUTIVE BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.staffSection, mapRooms.plane.executiveBedroom) }\n            },\n            HOSTAGE: {\n              'EXECUTIVE BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.executiveBedroom) },\n              'LUGGAGE HOLD': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.luggageHold) },\n              'MEETING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.meetingRoom) },\n              'PRESS SECTION A': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.pressSectionA) }\n            },\n            'SECURE AREA': {\n              'EXECUTIVE BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.executiveBedroom) },\n              'LUGGAGE HOLD': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.luggageHold) },\n              'MEETING ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.meetingRoom) },\n              'STAFF SECTION': { seasonSpan: [5,99], name: getDesc(mapRooms.plane.staffSection) }\n            }\n          }\n        },\n        SKYSCRAPER: {\n          name: terms.mapNames.skyscraper,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              '1F BBQ / 1F KITCHEN': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.bbq, mapRooms.skyscraper.kitchen) },\n              '1F BEDROOM / 1F BATHROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.bedroom, mapRooms.skyscraper.bathroom) },\n              '2F EXHIBITION / 2F WORK OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.exhibition, mapRooms.skyscraper.workOffice) },\n              '2F KARAOKE / 2F TEA ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.karaoke , mapRooms.skyscraper.teaRoom) }\n            },\n            HOSTAGE: {\n              '1F BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.bedroom) },\n              '1F KITCHEN': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.kitchen) },\n              '2F GEISHA ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.geishaRoom) },\n              '2F WORK OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.workOffice) }\n            },\n            'SECURE AREA': {\n              '1F BBQ': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.bbq) },\n              '1F BEDROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.bedroom) },\n              '2F TEA ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.teaRoom) },\n              '2F WORK OFFICE': { seasonSpan: [5,99], name: getDesc(mapRooms.skyscraper.workOffice) }\n            }\n          }\n        },\n        YACHT: {\n          name: terms.mapNames.yacht,\n          seasonSpan: [5,99],\n          objectives: {\n            BOMB: {\n              'CAFETERIA / STAFF DORMITORY': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.cafeteria, mapRooms.yacht.staffDormitory) },\n              'KITCHEN / ENGINE CONTROL': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.kitchen, mapRooms.yacht.engineControl) },\n              'MAPS ROOM / COCKPIT': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.mapsRoom, mapRooms.yacht.cockpit) },\n              'SERVER ROOM / ENGINE STORAGE': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.serverRoom, mapRooms.yacht.engineStorage) }\n            },\n            HOSTAGE: {\n              CAFETERIA: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.cafeteria) },\n              CASINO: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.casino) },\n              ENGINE: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.engine) },\n              'MAPS ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.mapsRoom) }\n            },\n            'SECURE AREA': {\n              'AKLARK SUB ROOM': { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.borealSubRoom) },\n              CASINO: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.casino) },\n              COCKPIT: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.cockpit) },\n              KITCHEN: { seasonSpan: [5,99], name: getDesc(mapRooms.yacht.kitchen) }\n            }\n          }\n        }\n      }\n    };\n  };\n\n  var getDescriptionFn = function getDescriptionFn(terms) {\n    var MAX_CHAR_LENGTH = 22,\n      BUFFER = 5,\n      ellipsisString = terms.stats.ellipsis;\n\n    return function getDesc(name1, name2) {\n      if (DEV_MODE && !name1) {\n        console.error('First room name is not defined.', name1, name2);\n      }\n\n      var result = name2 ? name1 + terms.stats.objectiveRoomDivider + name2 : name1;\n\n      result = result.removeBreakTags();\n\n      if (result && (result.length > MAX_CHAR_LENGTH + BUFFER)) {\n        result = result.substring(0, MAX_CHAR_LENGTH - 1) + ellipsisString;\n      }\n\n      return result;\n    };\n  };\n\n  return  {\n    getData: getMapStatsData\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsRender = (function(R6MLangTerms, undefined) {\n  var ALL_KEY = 'ALL',\n    statTerms = R6MLangTerms.terms.stats,\n    locales = {\n      ch: { thousands: ',', decimal: '.' },\n      cs: { thousands: ' ', decimal: ',' },\n      de: { thousands: ' ', decimal: ',' },\n      es: { thousands: '.', decimal: ',' },\n      fr: { thousands: ' ', decimal: ',' },\n      it: { thousands: '.', decimal: ',' },\n      ja: { thousands: ',', decimal: '.' },\n      pt: { thousands: '.', decimal: ',' },\n      ru: { thousands: ' ', decimal: ',' }\n    },\n    localeDefault = {\n      thousands: ',', decimal: '.'\n    };\n\n  var numberWithCommas = function numberWithCommas(x, separator) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  };\n\n  var getFormattedNumber = function getFormattedNumber(num, displayType, options) {\n    var locale = R6MLangTerms.getLoadedLang().split('_')[0],\n      separator;\n\n    options = options || {};\n\n    switch (displayType) {\n    case 'percent':\n      num *= 100;\n      num = (num < 10) ? num.toFixed(1) : Math.round(num);\n      separator = (locales[locale] && !options.disableLocale) ? locales[locale].decimal : localeDefault.decimal;\n      num = ('' + num).replace('.', separator);\n      return options.minimal ? num : R6MLangTerms.terms.stats.percentageFormat.replace('{num}', num);\n    case 'ratio':\n      num = num.toFixed(1);\n      separator = (locales[locale] && !options.disableLocale) ? locales[locale].decimal : localeDefault.decimal;\n      num = ('' + num).replace('.', separator);\n      return num;\n    default: // number\n      separator = (locales[locale] && !options.disableLocale) ? locales[locale].thousands : localeDefault.thousands;\n      return numberWithCommas(num, separator);\n    }\n  };\n\n  var renderAbout = function renderAbout($aboutEl) {\n    var html = '';\n\n    html += '<div class=\"about-container\">';\n    html += '<h2>' + statTerms.aboutLinksHeader + '</h2>';\n    html += '<div class=\"link-wrapper\">';\n    html += '<a href=\"index.html\">' + statTerms.aboutR6MapsHome + '</a>';\n    html += '<a href=\"about/about.html\">' + statTerms.aboutR6MapsAbout + '</a>';\n    html += '<a class=\"about-footer\" href=\"https://rainbow6.ubisoft.com/siege/en-us/news/152-293696-16/introduction-to-the-data-peek-velvet-shell-statistics\">' + statTerms.aboutBasedOnUbisoft + '</a>';\n    html += '</div>';\n    html += '</div>';\n\n    $aboutEl.html(html);\n  };\n\n  var renderHeaders = function renderHeaders($headers) {\n    var statTerms = R6MLangTerms.terms.stats;\n\n    $headers.main.find('.page-title').html(statTerms.headerMainBeta);\n    $headers.filters.html(statTerms.headerFilters);\n    $headers.mapSection.html(statTerms.headerMap);\n    $headers.opSection.html(statTerms.headerOperators);\n  };\n\n  var renderLoadError = function renderLoadError($outputEl) {\n    $outputEl.html('<p class=\"error\">' + R6MLangTerms.terms.stats.error + '</p>');\n  };\n\n  var renderLoadInfo = function renderLoadInfo($infoEl, filterInfo, metaData) {\n    var statTerms = R6MLangTerms.terms.stats,\n      infoLine1,\n      infoLine2,\n      seasonText = (filterInfo.season == ALL_KEY) ? null : metaData.seasons[filterInfo.season].name,\n      platformText = (filterInfo.platform == ALL_KEY) ? null : metaData.platforms[filterInfo.platform].name,\n      mapText = (filterInfo.map == ALL_KEY) ? null : metaData.mapModeLocations[filterInfo.map].name,\n      modeText = (filterInfo.mode == ALL_KEY) ? null : metaData.modes[filterInfo.mode].name,\n      locationText = (filterInfo.location == ALL_KEY || filterInfo.map == ALL_KEY || filterInfo.mode == ALL_KEY) ? null : metaData.mapModeLocations[filterInfo.map].objectives[filterInfo.mode][filterInfo.location].name;\n\n    if (platformText) {\n      infoLine1 = statTerms.loadedInfoLine1SinglePlatform.replace('{season}', seasonText).replace('{platform}', platformText);\n    } else {\n      infoLine1 = statTerms.loadedInfoLine1AllPlatforms.replace('{season}', seasonText);\n    }\n\n    if (!mapText && !modeText) {\n      infoLine2 = statTerms.loadedInfoLine2AllMapsAllModes;\n    } else if (mapText && !modeText) {\n      infoLine2 = statTerms.loadedInfoLine2SingleMapAllModes.replace('{map}', mapText);\n    } else if (!mapText && modeText) {\n      infoLine2 = statTerms.loadedInfoLine2AllMapsSingleMode.replace('{mode}', modeText);\n    } else if (mapText && modeText && !locationText) {\n      infoLine2 = statTerms.loadedInfoLine2SingleMapSingleModeAllLocations.replace('{map}', mapText).replace('{mode}', modeText);\n    } else {\n      infoLine2 = statTerms.loadedInfoLine2SingleMapSingleModeSingleLocation.replace('{map}', mapText).replace('{mode}', modeText).replace('{location}', locationText);\n    }\n\n    $infoEl.html('<span class=\"main-info\">' + infoLine1 + '</span><span class=\"secondary-info\">' + infoLine2 + '</span>');\n  };\n\n  var renderStaticEl = function renderStaticEl($allParagraphs, $instructionParagraphs) {\n    $allParagraphs.html(R6MLangTerms.terms.stats.allOption);\n    $instructionParagraphs.html(R6MLangTerms.terms.stats.instructions);\n  };\n\n  var setPageTitle = function setPageTitle() {\n    document.title = R6MLangTerms.terms.stats.titleBeta;\n  };\n\n  return  {\n    getFormattedNumber: getFormattedNumber,\n    renderAbout: renderAbout,\n    renderHeaders: renderHeaders,\n    renderStaticEl: renderStaticEl,\n    renderLoadError: renderLoadError,\n    renderLoadInfo: renderLoadInfo,\n    setPageTitle: setPageTitle\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsControls = (function(R6MLangTerms, undefined){\n  var ALL_KEY = 'ALL';\n\n  var locationsGet = function locationsGet($locationsControl) {\n    return $locationsControl.find(':selected').val();\n  };\n\n  var locationsPopulateOptions = function locationsPopulateOptions(\n      $locationsControls,  mapModeLocationsData, selectedSeason, selectedMap, selectedGameMode\n    ) {\n    var optionsCount = 1,\n      $locationsSelect = $locationsControls.find('select');\n\n    $locationsSelect.append($('<option></option>')\n       .attr('value', ALL_KEY).text(R6MLangTerms.terms.stats.allOption));\n\n    if (selectedMap != ALL_KEY && selectedGameMode != ALL_KEY) {\n      for (var objectiveLocation in mapModeLocationsData[selectedMap].objectives[selectedGameMode]) {\n        var info = mapModeLocationsData[selectedMap].objectives[selectedGameMode][objectiveLocation];\n\n        if (\n          (info.seasonSpan[0] <= selectedSeason) &&\n          (info.seasonSpan[1] >= selectedSeason)\n        ) {\n          $locationsSelect.append($('<option></option>')\n             .attr('value', objectiveLocation).text(info.name));\n          optionsCount++;\n        }\n      }\n    }\n    $locationsSelect.attr('size', optionsCount);\n    if (optionsCount == 1) {\n      $locationsSelect.parent('.control').addClass('only-all');\n    } else {\n      $locationsSelect.parent('.control').removeClass('only-all');\n    }\n  };\n\n  var locationsSetup = function locationsSetup(\n    $locationsControl, mapModeLocationsData, selectedSeason, selectedMap, selectedGameMode, objectiveLocationChangeCb\n  ) {\n    var $locationsSelect = $locationsControl.find('select'),\n      $locationsLabel = $locationsControl.find('label');\n\n    $locationsLabel.html(R6MLangTerms.terms.stats.labelObjectiveLocation);\n    locationsUpdate($locationsControl, mapModeLocationsData, selectedSeason, selectedMap, selectedGameMode);\n    $locationsSelect.on('change', function(event) {\n      objectiveLocationChangeCb();\n    });\n  };\n\n  var locationsUpdate = function locationsUpdate(\n    $locationsControl, mapModeLocationsData, selectedSeason, selectedMap, selectedGameMode\n  ) {\n    var $locationsSelect = $locationsControl.find('select'),\n      startingValue = locationsGet($locationsSelect);\n\n\n    $locationsSelect.find('option').remove();\n    locationsPopulateOptions($locationsControl, mapModeLocationsData, selectedSeason, selectedMap, selectedGameMode);\n    trySelect($locationsControl, startingValue);\n  };\n\n  var mapsGet = function mapsGet($mapsControl) {\n    return $mapsControl.find(':selected').val();\n  };\n\n  var mapsPopulateOptions = function mapsPopulateOptions($mapsControl, mapModeLocationsData, selectedSeason) {\n    var mapOptions = [],\n      $mapsSelect = $mapsControl.find('select');\n\n    for (var map in mapModeLocationsData) {\n      if (\n        (mapModeLocationsData[map].seasonSpan[0] <= selectedSeason) &&\n        (mapModeLocationsData[map].seasonSpan[1] >= selectedSeason)\n      ) {\n        mapOptions.push({ value: map, text: mapModeLocationsData[map].name });\n      }\n    }\n\n    $mapsSelect.append($('<option></option>')\n       .attr('value', ALL_KEY).text(R6MLangTerms.terms.stats.allOption));\n\n    mapOptions.sort(function(x,y) {\n      if (x.text > y.text) {\n        return 1;\n      }\n    });\n\n    mapOptions.forEach(function(map) {\n      $mapsSelect.append($('<option></option>')\n         .attr('value', map.value).text(map.text));\n    });\n  };\n\n  var mapsSetup = function mapsSetup(\n    $mapsControl, mapModeLocationsData, selectedSeason, mapChangeCb\n  ) {\n    var $mapsSelect = $mapsControl.find('select'),\n      $mapsLabel = $mapsControl.find('label');\n\n    $mapsLabel.html(R6MLangTerms.terms.stats.labelMap);\n    mapsUpdate($mapsControl, mapModeLocationsData, selectedSeason);\n    $mapsSelect.on('change', function() {\n      mapChangeCb();\n    });\n  };\n\n  var mapsUpdate = function mapsUpdate(\n    $mapsControl, mapModeLocationsData, selectedSeason\n  ) {\n    var $mapsSelect = $mapsControl.find('select'),\n      startingValue = mapsGet($mapsSelect);\n\n    $mapsSelect.find('option').remove();\n    mapsPopulateOptions($mapsControl, mapModeLocationsData, selectedSeason);\n    trySelect($mapsControl, startingValue);\n  };\n\n  var modesGet = function modesGet($modesControl) {\n    return $modesControl.find(':selected').val();\n  };\n\n  var modesPopulateOptions = function modesPopulateOptions(\n    $modesControl, modesData, mapModeLocationsData, selectedSeason, selectedMap\n  ) {\n    var optionsCount = 1,\n      $modesSelect = $modesControl.find('select');\n\n    $modesSelect.append($('<option></option>')\n       .attr('value', ALL_KEY).text(R6MLangTerms.terms.stats.allOption));\n\n    for (var mode in modesData) {\n      if (\n        (modesData[mode].seasonSpan[0] <= selectedSeason) &&\n        (modesData[mode].seasonSpan[1] >= selectedSeason) &&\n        ((selectedMap == ALL_KEY) || (mapModeLocationsData[selectedMap].objectives[mode]))\n      ) {\n        $modesSelect.append($('<option></option>')\n           .attr('value', mode).text(modesData[mode].name));\n        optionsCount++;\n      }\n    }\n    $modesSelect.attr('size', optionsCount);\n  };\n\n  var modesSetup = function modesSetup(\n    $modesControl, modesData, mapModeLocationsData, modeChangeCb, selectedSeason, selectedMap\n  ) {\n    var $modesSelect = $modesControl.find('select'),\n      $modesLabel = $modesControl.find('label');\n\n    $modesLabel.html(R6MLangTerms.terms.stats.labelGameMode);\n    modesUpdate($modesControl, modesData, mapModeLocationsData, selectedSeason, selectedMap);\n    $modesSelect.on('change', function(event) {\n      modeChangeCb();\n    });\n  };\n\n  var modesUpdate = function modesUpdate(\n    $modesControl, modesData, mapModeLocationsData, selectedSeason, selectedMap\n  ) {\n    var startingValue = modesGet($modesControl),\n      $modesSelect = $modesControl.find('select');\n\n    $modesSelect.find('option').remove();\n    modesPopulateOptions($modesControl, modesData, mapModeLocationsData, selectedSeason, selectedMap);\n    trySelect($modesControl, startingValue);\n  };\n\n  var platformsGet = function mapsGet($platformsControl) {\n    return $platformsControl.find(':selected').val();\n  };\n\n  var platformsPopulateOptions = function platformsPopulateOptions(\n    $platformsControl, platformsData, selectedSeason\n  ) {\n    var $platformsSelect = $platformsControl.find('select');\n\n    $platformsSelect.append($('<option></option>')\n       .attr('value', ALL_KEY).text(R6MLangTerms.terms.stats.allOption));\n\n    for (var platform in platformsData) {\n      if (\n        (platformsData[platform].seasonSpan[0] <= selectedSeason) &&\n        (platformsData[platform].seasonSpan[1] >= selectedSeason)\n      ) {\n        $platformsSelect.append($('<option></option>')\n           .attr('value', platform).text(platformsData[platform].name));\n      }\n    }\n  };\n\n  var platformsSetup = function platformsSetup(\n    $platformsControl, platformsData, selectedSeason, platformChangeCb\n  ) {\n    var $platformsSelect = $platformsControl.find('select'),\n      $platformsLabel = $platformsControl.find('label');\n\n    $platformsLabel.html(R6MLangTerms.terms.stats.labelPlatform);\n    platformsUpdate($platformsControl, platformsData, selectedSeason);\n    $platformsSelect.on('change', function() {\n      platformChangeCb();\n    });\n  };\n\n  var platformsUpdate = function platformsUpdate(\n    $platformsControl, platformsData, selectedSeason\n  ) {\n    var $platformsSelect = $platformsControl.find('select'),\n      startingValue = platformsGet($platformsControl);\n\n    $platformsSelect.find('option').remove();\n    platformsPopulateOptions($platformsControl, platformsData, selectedSeason);\n    trySelect($platformsControl, startingValue);\n  };\n\n  var ranksPopulateOptions = function ranksPopulateOptions(\n    $ranksControl, ranksData, selectedSeason\n  ) {\n    var html = '',\n      srData;\n\n    for (var key in ranksData) {\n      srData = ranksData[key];\n      if ((selectedSeason >= srData.seasonSpan[0]) && (selectedSeason <= srData.seasonSpan[1])) {\n        html += '<div class=\"skill-rank-input\"><input type=\"checkbox\" class=\"rank-icon ' + srData.cssClass + '\" name=\"skill-rank-group[]\" value=\"' + key + '\" /><div>' + srData.name + '</div></div>';\n      }\n    }\n    $ranksControl.html(html);\n  };\n\n  var ranksGet = function ranksGet($ranksControl) {\n    var result = [];\n\n    $.each($ranksControl.find(':checked'), function(index, input) {\n      result.push($(input).val());\n    });\n    return result;\n  };\n\n  var ranksSetup = function ranksSetup(\n    $ranksControl, ranksData, selectedSeason, rankChangeCb\n  ) {\n    var currentSelectedRanks = ranksGet($ranksControl);\n\n    ranksPopulateOptions($ranksControl, ranksData, selectedSeason);\n    $ranksControl.on('change', rankChangeCb);\n    ranksTrySelect($ranksControl, currentSelectedRanks);\n  };\n\n  var ranksTrySelect = function ranksTrySelect($ranksControl, rankOptions) {\n    rankOptions.forEach(function(rank) {\n      $ranksControl.find(':checkbox[value=' + rank + ']').prop('checked','true');\n    });\n  };\n\n  var seasonsGet = function seasonsGet($seasonsControl) {\n    return $seasonsControl.find(':selected').val();\n  };\n\n  var seasonsPopulateOptions = function seasonsPopulateOptions(\n    $seasonsControl, seasonsData\n  ) {\n    var $seasonsSelect = $seasonsControl.find('select');\n\n    for (var seasonKey in seasonsData) {\n      $seasonsSelect.append($('<option></option>')\n         .attr('value', seasonKey).text(seasonsData[seasonKey].name));\n    }\n  };\n\n  var seasonsSetup = function seasonsSetup(\n    $seasonsControl, seasonsData, seasonChangeCb\n  ) {\n    var $seasonsSelect = $seasonsControl.find('select'),\n      $seasonsLabel = $seasonsControl.find('label');\n\n    $seasonsLabel.html(R6MLangTerms.terms.stats.labelSeason);\n    $seasonsSelect.find('option').remove();\n    seasonsPopulateOptions($seasonsControl, seasonsData);\n    $seasonsSelect.on('change', function(event) {\n      seasonChangeCb();\n    });\n  };\n\n  var trySelect = function trySelect($controlEl, option) {\n    return R6MHelpers.trySelectOption($controlEl.find('select'), option || ALL_KEY);\n  };\n\n  return  {\n    ALL_KEY: ALL_KEY,\n    locations: {\n      get: locationsGet,\n      setup: locationsSetup,\n      trySelect: trySelect,\n      update: locationsUpdate\n    },\n    maps: {\n      get: mapsGet,\n      setup: mapsSetup,\n      trySelect: trySelect,\n      update: mapsUpdate\n    },\n    modes: {\n      get: modesGet,\n      setup: modesSetup,\n      trySelect: trySelect,\n      update: modesUpdate\n    },\n    platforms: {\n      get: platformsGet,\n      setup: platformsSetup,\n      trySelect: trySelect,\n      update: platformsUpdate\n    },\n    ranks: {\n      get: ranksGet,\n      setup: ranksSetup,\n      trySelect: ranksTrySelect\n    },\n    seasons: {\n      get: seasonsGet,\n      setup: seasonsSetup,\n      trySelect: trySelect\n    }\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsOpData = (function(R6MLangTerms, undefined) {\n  var WARNING_THRESHOLD = 20,\n    opStats = {\n      attackers: [],\n      defenders: [],\n      sortInfo: {\n        field: null,\n        rank: null,\n        isDescending: null\n      }\n    };\n\n  var getAveragesTotals = function getAveragesTotals(opRoleStats) {\n    var count = 0,\n      averagesTotals = {};\n\n    for (var opKey in opRoleStats) {\n      for (var sarKey in opRoleStats[opKey].statsAllRanks) {\n        averagesTotals[sarKey] = averagesTotals[sarKey] || {};\n        averagesTotals[sarKey].all = averagesTotals[sarKey].all || { total: 0, avg: 0 };\n        averagesTotals[sarKey].all.total += opRoleStats[opKey].statsAllRanks[sarKey];\n      }\n      for (var sbrKey in opRoleStats[opKey].statsByRank) {\n        for (var key in opRoleStats[opKey].statsByRank[sbrKey]) {\n          averagesTotals[key] = averagesTotals[key] || {};\n          averagesTotals[key][sbrKey] = averagesTotals[key][sbrKey] || { total: 0, avg: 0 };\n          averagesTotals[key][sbrKey].total += opRoleStats[opKey].statsByRank[sbrKey][key];\n        }\n      }\n      count++;\n    }\n\n    for (var statKey in averagesTotals) {\n      for (var operator in averagesTotals[statKey]) {\n        averagesTotals[statKey][operator].avg = averagesTotals[statKey][operator].total / count;\n      }\n    }\n    return averagesTotals;\n  };\n\n  var getEmptyStatsObject = function getEmptyStatsObject() {\n    return {\n      totalKills: 0,\n      totalDeaths: 0,\n      totalPlays: 0,\n      totalWins: 0,\n      killsPerRound: 0,\n      killsPerDeath: 0,\n      pickRate: 0,\n      winRate: 0,\n      survivalRate: 0,\n      warning: false\n    };\n  };\n\n  var getCurrentStats = function getCurrentStats() {\n    return opStats;\n  };\n\n  var getOpRoleStats = function getOpRoleStats(apiOpData, totalRounds, opMetaData) {\n    var opRoleStats = [],\n      totalPlaysByRank = {},\n      totalPlaysAllRanks = 0;\n\n    for (var opKey in apiOpData) {\n      var newOpStats = {\n        key: opKey,\n        name: opMetaData[opKey].name,\n        cssClass: opMetaData[opKey].cssClass,\n        statsByRank: {},\n        statsAllRanks: getEmptyStatsObject()\n      };\n\n      for (var rankKey in apiOpData[opKey]) {\n        var opRankStats = getEmptyStatsObject(),\n          apiOpRankData = apiOpData[opKey][rankKey];\n\n        ['totalWins', 'totalKills', 'totalDeaths', 'totalPlays'].forEach(function(statKey) {\n          opRankStats[statKey] = +apiOpRankData[statKey];\n          newOpStats.statsAllRanks[statKey] += opRankStats[statKey];\n        });\n\n        totalPlaysByRank[rankKey] = totalPlaysByRank[rankKey] ?\n          totalPlaysByRank[rankKey] + opRankStats.totalPlays : opRankStats.totalPlays;\n        totalPlaysAllRanks += opRankStats.totalPlays;\n\n        newOpStats.statsByRank[rankKey] = opRankStats;\n      }\n\n      opRoleStats.push(newOpStats);\n    }\n    setTallies(opRoleStats, totalRounds, totalPlaysByRank, totalPlaysAllRanks);\n    setWarnings(opRoleStats);\n    return {\n      operators: opRoleStats,\n      averagesTotals: getAveragesTotals(opRoleStats)\n    };\n  };\n\n  var set = function set(apiData, totalRounds, opMetaData) {\n    opStats.attackers = getOpRoleStats(apiData.role.Attacker, totalRounds, opMetaData);\n    opStats.defenders = getOpRoleStats(apiData.role.Defender, totalRounds, opMetaData);\n  };\n\n  var setTallies = function setTallies(opRoleStats, totalRounds, totalPlaysByRank, totalPlaysAllRanks) {\n    opRoleStats.forEach(function(operator) {\n      setTalliesForRank(operator.statsAllRanks);\n      operator.statsAllRanks.pickRate = (!totalRounds) ? 0 : operator.statsAllRanks.totalPlays / totalRounds;\n      for (var rankKey in operator.statsByRank) {\n        var stats = operator.statsByRank[rankKey];\n\n        setTalliesForRank(stats);\n        stats.pickRate = (!totalPlaysByRank[rankKey] || !operator.statsAllRanks.totalPlays || !totalPlaysAllRanks) ? 0 :\n          (stats.totalPlays / totalPlaysByRank[rankKey]) / (operator.statsAllRanks.totalPlays / totalPlaysAllRanks) * operator.statsAllRanks.pickRate;\n        stats.pickRate = Math.min(0.99, Math.max(0.001, stats.pickRate));\n      }\n    });\n  };\n\n  var setTalliesForRank = function setTalliesForRank(stats) {\n    stats.killsPerDeath = (!stats.totalDeaths) ? 0 : stats.totalKills / stats.totalDeaths;\n    stats.killsPerRound = (!stats.totalPlays) ? 0 : stats.totalKills / stats.totalPlays;\n    stats.survivalRate = (!stats.totalPlays) ? 0 : (stats.totalPlays - stats.totalDeaths) / stats.totalPlays;\n    stats.winRate = (!stats.totalPlays) ? 0 : stats.totalWins / stats.totalPlays;\n  };\n\n  var setWarnings = function setWarnings(opRoleStats) {\n    for (var opKey in opRoleStats) {\n      if (opRoleStats[opKey].statsAllRanks.totalPlays < WARNING_THRESHOLD) {\n        opRoleStats[opKey].statsAllRanks.warning = true;\n      }\n      for (var rankKey in opRoleStats[opKey].statsByRank) {\n        if (opRoleStats[opKey].statsByRank[rankKey].totalPlays < WARNING_THRESHOLD) {\n          opRoleStats[opKey].statsByRank[rankKey].warning = true;\n        }\n      }\n    }\n  };\n\n  var trySort = function trySort(sortField, isDescending, optionalRank) {\n    opStats.sortInfo.field = sortField || 'name';\n    opStats.sortInfo.rank = optionalRank;\n    opStats.sortInfo.isDescending = isDescending;\n    trySortRole(opStats.attackers.operators, sortField, isDescending, optionalRank);\n    trySortRole(opStats.defenders.operators, sortField, isDescending, optionalRank);\n  };\n\n  var trySortRole = function trySortRole(newOpStats, sortField, isDescending, optionalRank) {\n    newOpStats.sort(function(a, b) {\n      var aValue = a.name,\n        bValue = b.name,\n        nameCompare = true;\n\n      if (sortField != 'name') {\n        nameCompare = false;\n        if (!optionalRank) {\n          aValue = a.statsAllRanks[sortField];\n          bValue = b.statsAllRanks[sortField];\n        } else {\n          aValue = (a.statsByRank[optionalRank]) ? a.statsByRank[optionalRank][sortField] : -1;\n          bValue = (b.statsByRank[optionalRank]) ? b.statsByRank[optionalRank][sortField] : -1;\n        }\n        if (aValue == bValue) {\n          aValue = a.name;\n          bValue = b.name;\n          nameCompare = true;\n        }\n      }\n      if (nameCompare) {\n        if (aValue > bValue) {\n          return 1;\n        }\n        if (aValue < bValue) {\n          return -1;\n        }\n      } else {\n        if (aValue < bValue) {\n          return 1;\n        }\n        if (aValue > bValue) {\n          return -1;\n        }\n      }\n      return 0;\n    });\n    if (isDescending) {\n      newOpStats.reverse();\n    }\n  };\n\n  return  {\n    get: getCurrentStats,\n    set: set,\n    trySort: trySort\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsMapData = (function(undefined) {\n  var mapStats = {};\n\n  var checkEmptyData = function checkEmptyData(mapApiData) {\n    if (!mapApiData || !mapApiData.winRole || !mapApiData.winRole.Attacker || !mapApiData.winRole.Defender) {\n      return true;\n    }\n    return false;\n  };\n\n  var getMapRoleStats = function getMapRoleStats(mapRoleApiData, winReasonsMetaData) {\n    var mapRoleStats = {\n        totalRoundsWon: +mapRoleApiData.totalRounds,\n        averageRoundLength: +mapRoleApiData.averageRoundDuration,\n        winReasons: []\n      },\n      winReason,\n      winReasonMeta;\n\n    for (var winReasonKey in winReasonsMetaData) {\n      winReasonMeta = winReasonsMetaData[winReasonKey];\n      winReason = mapRoleApiData[winReasonKey];\n\n      if (winReason && (winReason != '0')) {\n        mapRoleStats.winReasons.push({\n          name: winReasonMeta.name,\n          key: winReasonKey,\n          cssClass: winReasonMeta.cssClass,\n          totalRounds: +winReason,\n          percent: (!mapRoleApiData.totalRounds) ? 0 : +winReason / +mapRoleApiData.totalRounds\n        });\n      }\n    }\n\n    mapRoleStats.winReasons.sort(function(x,y) {\n      if (x.totalRounds < y.totalRounds) {\n        return 1;\n      } else if (x.totalRounds > y.totalRounds) {\n        return -1;\n      }\n      return 0;\n    });\n    return mapRoleStats;\n  };\n\n  var getOverallMapStats = function getOverallMapStats(mapApiData) {\n    var overallStats = {};\n\n    overallStats.totalRounds = mapStats.attackers.totalRoundsWon + mapStats.defenders.totalRoundsWon;\n    overallStats.averageRoundLength = (!overallStats.totalRounds) ? 0 : ((mapStats.attackers.totalRoundsWon * mapStats.attackers.averageRoundLength) + (mapStats.defenders.totalRoundsWon * mapStats.defenders.averageRoundLength)) / overallStats.totalRounds;\n    mapStats.attackers.winPercent = (!overallStats.totalRounds) ? 0 : mapStats.attackers.totalRoundsWon / overallStats.totalRounds;\n    mapStats.defenders.winPercent = (!overallStats.totalRounds) ? 0 : mapStats.defenders.totalRoundsWon / overallStats.totalRounds, 5;\n    return overallStats;\n  };\n\n  var getSavedStats = function getSavedStats() {\n    return mapStats;\n  };\n\n  var getTotalRoundsFromApiData = function getTotalRoundsFromApiData(mapApiData) {\n    if (checkEmptyData(mapApiData)) {\n      return null;\n    }\n    return +mapApiData.winRole.Attacker.totalRounds + +mapApiData.winRole.Defender.totalRounds;\n  };\n\n  var setFromApiData = function getFromApiData(mapApiData, winReasonsMetaData) {\n    if (checkEmptyData(mapApiData)) {\n      mapStats = null;\n      return;\n    }\n\n    mapStats.attackers = getMapRoleStats(mapApiData.winRole.Attacker, winReasonsMetaData);\n    mapStats.defenders = getMapRoleStats(mapApiData.winRole.Defender, winReasonsMetaData);\n    mapStats.overall = getOverallMapStats(mapApiData);\n  };\n\n  return  {\n    set: setFromApiData,\n    get: getSavedStats,\n    getTotalRoundsFromApiData: getTotalRoundsFromApiData\n  };\n})();\n","'use strict';\n\nvar R6MStatsApi = (function(undefined) {\n  var getMapAndOperators = function getMapAndOperators(\n    mapSuccessCb,\n    mapErrorCb,\n    opSuccessCb,\n    opErrorCb,\n    allSuccessCb,\n    queryString, // a little hacky, relies on UI param names matching API but so much easier :)\n    metaData\n  ) {\n    var mapCall = $.ajax({\n      url: 'http://www.r6maps.com/api/stats/maps.php' + queryString,\n      type: 'GET',\n      dataType: 'jsonp',\n      timeout: 20000\n    }).fail(function(){\n      mapErrorCb();\n      opErrorCb();\n    });\n    var opCall = $.ajax({\n      url: 'http://www.r6maps.com/api/stats/operators.php' + queryString,\n      type: 'GET',\n      dataType: 'jsonp',\n      timeout: 20000\n    }).fail(opErrorCb);\n\n    $.when(mapCall).then(function (mapApiData) {\n      mapSuccessCb(mapApiData);\n    });\n    $.when(mapCall, opCall).then(function (mapApiData, opApiData) {\n      opSuccessCb(opApiData[0], mapApiData[0]);\n      allSuccessCb();\n    });\n  };\n\n  return  {\n    getMapAndOperators: getMapAndOperators\n  };\n})();\n","'use strict';\n\nvar R6MStatsMapRender = (function(R6MLangTerms, undefined) {\n  var statTerms = R6MLangTerms.terms.stats;\n\n  var getAdditionalInfoHtml = function getAdditionalInfoHtml(mapStats, metaData, getFormattedNumberFn) {\n    var html = '';\n\n    [{\n      name: statTerms.averageRoundLength,\n      cssClass: 'average-round-length',\n      statKey: 'averageRoundLength',\n      numFormatFn: function(num) {\n        return statTerms.numberSeconds.replace('{num}', '<span class=\"num\">' + Math.round(num) + '</span>');\n      }\n    },\n      {\n        name: statTerms.totalRoundsPlayed,\n        cssClass: 'total-rounds',\n        statKey: 'totalRounds',\n        numFormatFn: function(num) {\n          return statTerms.numberRounds.replace('{num}', '<span class=\"num\">' + getFormattedNumberFn(num, 'number') + '</span>');\n        }\n      }].forEach(function(info) {\n        html += '<div class=\"map-info-wrapper\">';\n        html += '<h3>' + info.name + '</h3>';\n        html += '<div class=\"map-info-wrapper-two\">';\n        html += '<div class=\"map-info-icon ' + info.cssClass + '\"></div>';\n        html += '<p>' + info.numFormatFn(mapStats.overall[info.statKey]) + '</p>';\n        html += '</div>';\n        html += '</div>';\n      });\n    return html;\n  };\n\n  var getWinRatesHtml = function getWinRatesHtml(mapStats, metaData, getFormattedNumberFn, roles) {\n    var html = '';\n\n    html += '<div class=\"map-win-rate-container\">';\n\n    html += '<div class=\"map-win-rate-row header\">';\n    roles.forEach(function(roleKey) {\n      html += '<div class=\"map-win-rate-cell header ' + metaData.roles[roleKey].cssClass + '\">' + metaData.roles[roleKey].name + '</div>';\n    });\n    html += '</div>';\n\n    html += '<div class=\"map-win-rate-row visual-bar\">';\n    roles.forEach(function(roleKey) {\n      html += '<div class=\"map-win-rate-cell visual-bar ' + metaData.roles[roleKey].cssClass + '\" style=\"width:' + getFormattedNumberFn(mapStats[roleKey].winPercent, 'percent') + '\">';\n      html += '<div>' + getFormattedNumberFn(mapStats[roleKey].winPercent, 'percent') + '</div>';\n      html += '<div class=\"label\">' + metaData.statTypes.winRate.name + '</div>';\n      html += '</div>';\n    });\n    html += '</div>';\n    html += '</div>'; //map-win-rate-container\n    return html;\n  };\n\n  var getWinReasonsContainerHtml = function getWinReasonsContainerHtml(mapStats, metaData, roles, getFormattedNumberFn) {\n    var html = '';\n\n    html += '<div class=\"map-win-reasons-container\">';\n    html += '<div class=\"map-win-reasons-row\">';\n    roles.forEach(function(roleKey) {\n      html += '<div class=\"map-win-reasons-cell ' + metaData.roles[roleKey].cssClass + '\">';\n      html += '<h3>' + statTerms.headerWinReasons.replace('{role}', metaData.roles[roleKey].nameSingular ) + '</h3>';\n      html += '<canvas class=\"' + metaData.roles[roleKey].cssClass + '\"></canvas>';\n\n      html += '<div class=\"legend\">';\n      mapStats[roleKey].winReasons.forEach(function(winReason) {\n        html += '<div class=\"legend-item\">';\n        html += '<div class=\"map-win-reason-icon-wrapper\" style=\"background-color: ' + metaData.winReasons[winReason.key].color + '\"><div class=\"map-win-reason-icon ' + winReason.cssClass + '\"></div></div>';\n        html += '<p class=\"name\"><span class=\"description\">' + winReason.name + '</span><span class=\"num\">' + getFormattedNumberFn(winReason.percent, 'percent') + '</span></p>';\n        html += '</div>';\n      });\n      html += '</div>';\n\n      html += '</div>';\n    });\n    html += '</div>';\n\n    html += '</div>';\n    return html;\n  };\n\n  var render = function render($outputEl, mapStats, metaData, getFormattedNumberFn) {\n    var html = '',\n      roles = ['attackers','defenders'];\n\n    if (!mapStats) {\n      html = '<p>' + statTerms.noResults + '</p>';\n      $outputEl.html(html);\n      return;\n    }\n\n    html += getWinRatesHtml(mapStats, metaData, getFormattedNumberFn, roles);\n    html += getWinReasonsContainerHtml(mapStats, metaData, roles, getFormattedNumberFn);\n    html += getAdditionalInfoHtml(mapStats, metaData, getFormattedNumberFn);\n    $outputEl.html(html);\n\n    updateWinReasonCharts(mapStats, $outputEl, metaData, roles, getFormattedNumberFn);\n  };\n\n  var updateWinReasonCharts = function updateWinReasonCharts(mapStats, $outputEl, metaData, roles, getFormattedNumberFn) {\n    var $canvas,\n      labels,\n      backgroundColor;\n\n    roles.forEach(function(roleKey) {\n      $canvas = $outputEl.find('canvas.' + metaData.roles[roleKey].cssClass);\n      data = [];\n      labels = [];\n      backgroundColor = [];\n\n      mapStats[roleKey].winReasons.forEach(function(winReason) {\n        data.push(winReason.totalRounds);\n        labels.push(winReason.name + ' (' + getFormattedNumberFn(winReason.percent, 'percent') + ')');\n        backgroundColor.push(metaData.winReasons[winReason.key].color);\n      });\n\n      var data = {\n        datasets: [{\n          data: data,\n          backgroundColor: backgroundColor\n        }],\n        labels: labels\n      };\n\n      new Chart($canvas, {\n        type: 'pie',\n        data: data,\n        options: {\n          maintainAspectRatio: true,\n          responsive: true,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            titleFontSize: 20,\n            titleMarginBottom: 10,\n            bodyFontSize: 20\n          }\n        }\n      });\n    });\n  };\n\n  return  {\n    render: render\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsOpRender = (function(R6MLangTerms, undefined) {\n  var statTerms = R6MLangTerms.terms.stats;\n\n  var getAveragesTotalsHtml = function getAveragesTotalsHtml(\n    averagesTotals, ranksMetaData, statTypesMetaData, ranksForSeason, roleCssClass, getFormattedNumberFn\n  ) {\n    var html = '',\n      avgTotalKey,\n      num;\n\n    html += '<tr class=\"' + roleCssClass + ' average-totals\">';\n    html += '<td class=\"sticky ' + roleCssClass + '\"></td>';\n    html += '<td class=\"field-name\">' + statTerms.averagesAndTotals + '</td>';\n\n    for (var statKey in statTypesMetaData) {\n      avgTotalKey = statTypesMetaData[statKey].showTotal ? 'total' : 'avg';\n\n      html += '<td class=\"all-ranks\">' + getFormattedNumberFn(averagesTotals[statKey].all[avgTotalKey], statTypesMetaData[statKey].displayType) + '</td>';\n      ranksForSeason.forEach(function(rankKey) {\n        html += '<td class=\"can-hide ' + ranksMetaData[rankKey].cssClass + '\">';\n        num = (!averagesTotals[statKey] || !averagesTotals[statKey][rankKey]) ? 0 : averagesTotals[statKey][rankKey][avgTotalKey];\n        html += '<span>' + getFormattedNumberFn(num, statTypesMetaData[statKey].displayType, { minimal: true }) + '</span>';\n        html += '</td>';\n      });\n    }\n\n    html += '</tr>';\n    return html;\n  };\n\n  var getOpHtml = function getOpHtml(\n    opStats,\n    ranksMetaData,\n    rolesMetaData,\n    statTypesMetaData,\n    ranksForSeason,\n    getFormattedNumberFn\n  ) {\n    var html = '',\n      ranksShownCount = ranksForSeason.length + 1; // +1 for 'ALL'\n\n    html += '<div class=\"wrapper\">';\n    html += '<div class=\"scroller\">';\n    html += '<table>';\n\n    for (var roleKey in rolesMetaData) {\n      html += getMainHeaderHtml(\n        ranksShownCount,\n        (roleKey == 'defenders') ? R6MLangTerms.terms.stats.tableHeaderDefenders : R6MLangTerms.terms.stats.tableHeaderAttackers,\n        rolesMetaData[roleKey].cssClass,\n        roleKey,\n        statTypesMetaData\n      );\n      html += getSubHeaderHtml(\n        ranksMetaData,\n        statTypesMetaData,\n        ranksForSeason,\n        opStats.sortInfo,\n        rolesMetaData[roleKey].cssClass\n      );\n      html += getOpRoleHtml(\n        opStats[roleKey].operators,\n        ranksMetaData,\n        statTypesMetaData,\n        ranksForSeason,\n        rolesMetaData[roleKey].cssClass,\n        getFormattedNumberFn\n      );\n      html += getAveragesTotalsHtml(\n        opStats[roleKey].averagesTotals,\n        ranksMetaData,\n        statTypesMetaData,\n        ranksForSeason,\n        rolesMetaData[roleKey].cssClass,\n        getFormattedNumberFn\n      );\n    }\n\n    html += '</table>';\n    html += '</div>';\n    html += '</div>';\n\n    return html;\n  };\n\n  var getMainHeaderHtml = function getMainHeaderHtml(\n    ranksShownCount, headerText, roleCssClass, roleKey, statTypesMetaData\n  ) {\n    var html = '',\n      chartClass,\n      chartIcon;\n\n    html += '<tr class=\"main ' + roleCssClass + '\">';\n    html += '<th class=\"sticky ' + roleCssClass + '\"></th>';\n    html += '<th class=\"op-name\">' + headerText + '</th>';\n    for (var statKey in statTypesMetaData) {\n      chartClass = (statTypesMetaData[statKey].disableChart) ? '' : ' chart-enabled';\n      chartIcon = (statTypesMetaData[statKey].disableChart) ? '' : '<span class=\"graph-icon\"></span>';\n      html += '<th class=\"stat-name ' + chartClass + '\" colspan=\"' + ranksShownCount + '\" data-rolekey=\"' + roleKey + '\" data-statkey = \"' + statKey + '\">';\n      html += '<span class=\"stat-name-wrapper\">' + statTypesMetaData[statKey].name + chartIcon + '</span>';\n      html += '</th>';\n    }\n    html += '</tr>';\n    return html;\n  };\n\n  var getNotesHtml = function getNotesHtml() {\n    var html = '';\n\n    html += '<h3>' + statTerms.tableNoteHeader + '</h3>';\n    html += '<ul>';\n    html += '<li>' + statTerms.tableNoteHeaders + '</li>';\n    html += '<li>' + statTerms.tableNoteWarningText  + '</li>';\n    html += '<li>' + statTerms.tableNotePickRate  + '</li>';\n    html += '</ul>';\n    return html;\n  };\n\n  var getOpRoleHtml = function getOpRoleHtml(\n    opStatsForRole, ranksMetaData,  statTypesMetaData, ranksForSeason, roleCssClass, getFormattedNumberFn\n  ) {\n    var html = '',\n      warningCssClass = false,\n      warningTitleTag;\n\n    opStatsForRole.forEach(function(operator) {\n      html += '<tr class=\"' + roleCssClass + '\">';\n      html += '<td class=\"sticky ' + roleCssClass + '\"><div class=\"op-icon ' + operator.cssClass + '\"></div></td>';\n      html += '<td class=\"op-name\">' + operator.name + '</<td>';\n\n      for (var statKey in statTypesMetaData) {\n        html += '<td class=\"all-ranks\">' + getFormattedNumberFn(operator.statsAllRanks[statKey], statTypesMetaData[statKey].displayType) + '</td>'; // ALL\n\n        ranksForSeason.forEach(function(rankKey) {\n          warningCssClass = (!operator.statsByRank[rankKey] || operator.statsByRank[rankKey].warning) ? 'warning ' : '';\n          warningTitleTag = (!operator.statsByRank[rankKey] || operator.statsByRank[rankKey].warning) ? 'title=\"' + statTerms.tableFewRoundsNote + '\" ' : '';\n\n          html += '<td class=\"can-hide ' + warningCssClass + ranksMetaData[rankKey].cssClass + '\"><span ' + warningTitleTag + '>';\n          html += (operator.statsByRank[rankKey]) ?\n            getFormattedNumberFn(operator.statsByRank[rankKey][statKey], statTypesMetaData[statKey].displayType, { minimal: true }) :\n            '-';\n          html += '</span></td>';\n        });\n      }\n      html += '</tr>';\n    });\n    return html;\n  };\n\n  var getSubHeaderHtml = function getSubHeaderHtml(\n    ranksMetaData, statTypesMetaData, ranksForSeason, sortInfo, roleCssClass\n  ) {\n    var html = '',\n      srData,\n      sortOrder,\n      curSortClass,\n      isCurSortCol;\n\n    isCurSortCol = (sortInfo.field == 'name');\n    sortOrder = (isCurSortCol && !sortInfo.isDescending) ? 'descending' : 'ascending';\n    curSortClass = isCurSortCol ? ' current-sort ' + sortOrder : '';\n    html += '<tr class=\"sub\">';\n    html += '<th class=\"sticky ' + roleCssClass + '\"></th>';\n    html += '<th class=\"op-name\">';\n    html += '<div tabindex=\"0\" class=\"sortable ' + curSortClass + '\" data-sortfield=\"name\" data-sortorder=\"' + sortOrder + '\">';\n    html += '<p>' + R6MLangTerms.terms.stats.tableHeaderName + '</p>';\n    html += '<div class=\"sort-order-icon\"></div>';\n    html += '</div>';\n    html += '</th>';\n\n    for (var statKey in statTypesMetaData) {\n      isCurSortCol = ((sortInfo.field == statKey) && !sortInfo.rank);\n      sortOrder = (isCurSortCol && !sortInfo.isDescending) ? 'descending' : 'ascending';\n      curSortClass = isCurSortCol ? ' current-sort ' + sortOrder : '';\n      html += '<th class=\"all-ranks\">';\n      html += '<div class=\"sortable' + curSortClass + '\" data-sortfield=\"' + statKey + '\" data-sortorder=\"' + sortOrder + '\" tabindex=\"0\">';\n      html += '<p>' + R6MLangTerms.terms.stats.tableHeaderAllRanks + '</p>';\n      html += '<div class=\"sort-order-icon\"></div>';\n      html += '</div>';\n      html += '</th>';\n\n      ranksForSeason.forEach(function(rankKey) {\n        srData = ranksMetaData[rankKey];\n        isCurSortCol = ((sortInfo.field == statKey) && (sortInfo.rank == rankKey));\n        sortOrder = (isCurSortCol && !sortInfo.isDescending) ? 'descending' : 'ascending';\n        curSortClass = isCurSortCol ? ' current-sort ' + sortOrder : '';\n        html += '<th class=\"can-hide ' + srData.cssClass + '\">';\n        html += '<div class=\"sortable' + curSortClass + '\" tabindex=\"0\" data-sortfield=\"' + statKey + '\" data-sortrank=\"' + rankKey + '\" data-sortorder=\"' + sortOrder + '\" title=\"' + srData.name + '\">';\n        html += '<div class=\"rank-icon ' + srData.cssClass + '\"></div>';\n        html += '<div class=\"sort-order-icon\"></div>';\n        html += '</div>';\n        html += '</th>';\n      });\n    }\n    html += '</tr>';\n    return html;\n  };\n\n  var render = function render(\n    opStats,\n    $outputEl,\n    ranksMetaData,\n    rolesMetaData,\n    statTypesMetaData,\n    ranksForSeason,\n    sortCb,\n    statGraphCb,\n    getFormattedNumberFn\n  ) {\n    var html = '';\n\n    if (opStats.attackers.operators.length == 0 || opStats.defenders.operators.length == 0) {\n      html = '<p>' + statTerms.noResults + '</p>';\n      $outputEl.html(html);\n      return;\n    }\n\n    html += getOpHtml(opStats, ranksMetaData, rolesMetaData, statTypesMetaData, ranksForSeason, getFormattedNumberFn);\n    html += getNotesHtml();\n    $outputEl.html(html);\n    setupSortColumns($outputEl, sortCb);\n    setupStatHeaders($outputEl, statGraphCb);\n  };\n\n  var setupSortColumns = function setupSortColumns($outputEl, sortCb) {\n    $outputEl.find('.sortable').on('click', function(event) {\n      var $source = $(event.target),\n        isDescending;\n\n      if (!$source.data('sortfield')){\n        $source = $source.parent(); // maybe too fragile to html structure?\n      }\n      isDescending = ($source.data('sortorder') == 'descending');\n      sortCb($source.data('sortfield'), isDescending, $source.data('sortrank'));\n    });\n  };\n\n  var setupStatHeaders = function setupStatHeaders($outputEl, statGraphCb) {\n    $outputEl.find('.stat-name.chart-enabled').on('click', function(event) {\n      var $source = $(event.target);\n\n      statGraphCb($source.data('statkey'), $source.data('rolekey'));\n    });\n  };\n\n  return  {\n    render: render\n  };\n})(R6MLangTerms);\n","'use strict';\n\nvar R6MStatsOpChart = (function(R6MLangTerms, undefined) {\n  var updateHeader = function updateHeader($header, statKey, roleKey, rolesMetaData, statTypeMetaData) {\n    var header = R6MLangTerms.terms.stats.chartHeader;\n\n    header = header.replace('{stat}', statTypeMetaData[statKey].name);\n    header = header.replace('{role}', rolesMetaData[roleKey].name);\n    $header.html(header);\n    $header.removeClass();\n    $header.addClass(rolesMetaData[roleKey].cssClass);\n  };\n\n  var updateOpRoleChart = function updateOpRoleChart(\n    $opChartEls,\n    opStats,\n    statKey,\n    roleKey,\n    filterInfo,\n    ranks,\n    metaData,\n    getFormattedNumberFn,\n    renderLoadInfoFn\n  ) {\n    updateHeader($opChartEls.header, statKey, roleKey, metaData.roles, metaData.statTypes);\n    renderLoadInfoFn($opChartEls.info);\n    $opChartEls.output.find('canvas').remove();\n\n    var newCanvas = $('<canvas/>').prop({ width: '100%', height: '100%' }),\n      ctx = newCanvas,\n      labels = [],\n      datasets = [],\n      opDataSet,\n      data,\n      num;\n\n    $opChartEls.output.append(newCanvas);\n\n    ranks.forEach(function(rank) {\n      labels.push(metaData.ranks[rank].name);\n    });\n\n    opStats[roleKey].operators.forEach(function(operator) {\n      data = [];\n      ranks.forEach(function(rank) {\n        num = (operator.statsByRank[rank]) ? operator.statsByRank[rank][statKey] : 0;\n        data.push(\n          getFormattedNumberFn(num, metaData.statTypes[statKey].displayType, { minimal: true, disableLocale: true })\n        );\n      });\n      opDataSet = {\n        label: operator.name,\n        data: data,\n        borderWidth: 2,\n        borderColor: metaData.operators[operator.key].color,\n        fill: false,\n        backgroundColor: metaData.operators[operator.key].color,\n        pointRadius: 5\n      };\n      datasets.push(opDataSet);\n    });\n\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        legend: {\n          labels: {\n            fontSize: 15\n          }\n        },\n        tooltips: {\n          titleFontSize: 20,\n          titleMarginBottom: 10,\n          bodyFontSize: 20\n        },\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: metaData.statTypes[statKey].chartBeginAtZero,\n              fontSize: 15\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              fontSize: 15\n            }\n          }]\n        }\n      }\n    });\n  };\n\n  return  {\n    updateOpRoleChart: updateOpRoleChart\n  };\n})(R6MLangTerms);\n","'use strict';\r\n\r\n(function(pagecode) { //eslint-disable-line wrap-iife\r\n  pagecode(window.jQuery, window, document, R6MLangTerms, R6MStatsMetaData, R6MStatsControls, R6MStatsRender, R6MStatsOpChart);\r\n}(function($, window, document, R6MLangTerms, R6MStatsMetaData, R6MStatsControls, R6MStatsRender, R6MStatsOpChart, undefined) {\r\n  var $headers = {},\r\n    $sections = {},\r\n    $outputs = {},\r\n    $controls = {},\r\n    $opChart = {},\r\n    $loadButton,\r\n    $ranksShowHider,\r\n    metaData,\r\n    statTerms,\r\n    lastLoadSnapshot = {\r\n      filters: {}\r\n    },\r\n    QUERY_PARAMS = {\r\n      SEASON: 'season',\r\n      PLATFORM: 'platform',\r\n      MAP: 'map',\r\n      MODE: 'mode',\r\n      LOCATION: 'location'\r\n    };\r\n\r\n  $(function() { // equivanelt to $(document).ready() - but a bit faster\r\n    R6MHelpers.tryLoadStartingLanguage(R6MLangTerms.tryLoadLanguage);\r\n    R6MHelpers.tryChangeDirection(R6MLangTerms.getLoadedDirection());\r\n    metaData = R6MStatsMetaData.getData();\r\n    statTerms = R6MLangTerms.terms.stats;\r\n    R6MStatsRender.setPageTitle();\r\n    assignPageElements();\r\n    R6MStatsRender.renderHeaders($headers);\r\n    R6MStatsRender.renderStaticEl($('p.all-text'), $('#instructions'));\r\n    R6MStatsRender.renderAbout($('#about-output'));\r\n    setupControls();\r\n    setupOpChart();\r\n    window.onpopstate = handleHistoryPop;\r\n    $('body').removeClass('doc-not-ready');\r\n\r\n    if (checkAnyParamsSet()) {\r\n      handleLoadButtonClick();\r\n    }\r\n  });\r\n\r\n  var assignPageElements = function assignPageElements() {\r\n    $headers.main = $('#header-main');\r\n    $headers.mapSection = $('#section-map h2');\r\n    $headers.opSection = $('#section-operators h2');\r\n    $headers.filters = $('nav h2');\r\n\r\n    $sections.maps = $('#section-map');\r\n    $outputs.mapSection = $('#section-map div.output');\r\n    $sections.ops = $('#section-operators');\r\n    $outputs.opSection = $('#section-operators div.output');\r\n    $controls.seasons = $('#seasons-control'),\r\n    $controls.platforms = $('#platforms-control'),\r\n    $controls.maps = $('#maps-control'),\r\n    $controls.modes = $('#game-modes-control'),\r\n    $controls.locations = $('#objective-locations-control'),\r\n    $loadButton = $('#load-control'),\r\n    $controls.ranks = $('#skill-ranks-control');\r\n    $ranksShowHider = $('#skill-ranks-show-hider');\r\n\r\n    $opChart.root = $('#op-chart');\r\n    $opChart.dialog = $opChart.root.find('.dialog');\r\n    $opChart.close = $opChart.root.find('.close');\r\n    $opChart.output = $opChart.root.find('.output');\r\n    $opChart.header = $opChart.root.find('h2');\r\n    $opChart.info = $opChart.root.find('.info');\r\n  };\r\n\r\n  var checkAnyParamsSet = function checkAnyParamsSet() {\r\n    for (var param in QUERY_PARAMS) {\r\n      if (R6MHelpers.queryString(QUERY_PARAMS[param])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  var closeOpChart = function closeOpChart() {\r\n    $('body').removeClass('op-chart-open');\r\n  };\r\n\r\n  var disableLoadControl = function disableLoadControl() {\r\n    $('body').addClass('disable-load');\r\n  };\r\n\r\n  var enableLoadControl = function enableLoadControl() {\r\n    $('body').removeClass('disable-load');\r\n  };\r\n\r\n  var getSkillRanksForSeason = function getSkillRanksForSeason(selectedSeason) {\r\n    var sd,\r\n      result = [];\r\n\r\n    for (var key in metaData.ranks) {\r\n      sd = metaData.ranks[key];\r\n      if ((selectedSeason >= sd.seasonSpan[0]) && (selectedSeason <= sd.seasonSpan[1])) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  var handleGameModeChange = function handleGameModeChange() {\r\n    R6MStatsControls.locations.update($controls.locations,\r\n      metaData.mapModeLocations,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      R6MStatsControls.maps.get($controls.maps),\r\n      R6MStatsControls.modes.get($controls.modes)\r\n    );\r\n    enableLoadControl();\r\n  };\r\n\r\n  var handleApiAllSuccess = function handleApiAllSuccess() {\r\n    $('body').removeClass('load-in-progress');\r\n    document.activeElement.blur();\r\n    enableLoadControl();\r\n  };\r\n\r\n  var handleApiMapSuccess = function handleApiMapSuccess(mapApiData) {\r\n    R6MStatsMapData.set(mapApiData, metaData.winReasons);\r\n    R6MStatsMapRender.render($outputs.mapSection, R6MStatsMapData.get(), metaData, R6MStatsRender.getFormattedNumber);\r\n    $sections.maps.removeClass('load-in-progress');\r\n    if (DEV_MODE) {\r\n      console.log('Map success', R6MStatsMapData.get());\r\n    }\r\n  };\r\n\r\n  var handleApiMapError = function handleApiMapError(mapData) {\r\n    $('body').removeClass('load-in-progress');\r\n    $sections.maps.removeClass('load-in-progress');\r\n    R6MStatsRender.renderLoadError($outputs.mapSection);\r\n  };\r\n\r\n  var handleApiOpSuccess = function handleApiOpSuccess(opApiData, mapApiData) {\r\n    R6MStatsOpData.set(\r\n      opApiData,\r\n      R6MStatsMapData.getTotalRoundsFromApiData(mapApiData),\r\n      metaData.operators\r\n    );\r\n    tryLoadOpSortField();\r\n\r\n    renderOpStats();\r\n    $sections.ops.removeClass('load-in-progress');\r\n    if (DEV_MODE) {\r\n      console.log('Operators success', R6MStatsOpData.get());\r\n    }\r\n  };\r\n\r\n  var handleApiOpError = function handleApiOpError(operatorsData) {\r\n    $sections.ops.removeClass('load-in-progress');\r\n    $outputs.opSection.html('<p class=\"error\">' + R6MLangTerms.terms.stats.error + '</p>');\r\n  };\r\n\r\n  var handleHistoryPop = function handleHistoryPop() {\r\n    setupControls();\r\n    enableLoadControl();\r\n  };\r\n\r\n  var handleLoadButtonClick = function handleLoadButtonClick() {\r\n    var possibleParams = [\r\n        { string: QUERY_PARAMS.SEASON, currentValue: R6MStatsControls.seasons.get($controls.seasons)},\r\n        { string: QUERY_PARAMS.PLATFORM, currentValue: R6MStatsControls.platforms.get($controls.platforms)},\r\n        { string: QUERY_PARAMS.MAP, currentValue: R6MStatsControls.maps.get($controls.maps)},\r\n        { string: QUERY_PARAMS.MODE, currentValue: R6MStatsControls.modes.get($controls.modes)},\r\n        { string: QUERY_PARAMS.LOCATION, currentValue: R6MStatsControls.locations.get($controls.locations)}\r\n      ],\r\n      queryString = '',\r\n      counter = 0;\r\n\r\n    possibleParams.forEach(function(param) {\r\n      if (param.currentValue && (param.currentValue != R6MStatsControls.ALL_KEY)) {\r\n        queryString += (counter == 0) ? '?' : '&';\r\n        queryString += param.string + '=' + param.currentValue;\r\n        counter++;\r\n      }\r\n      lastLoadSnapshot.filters[param.string] = param.currentValue;\r\n    });\r\n\r\n    history.pushState({}, '', [location.protocol, '//', location.host, location.pathname].join('') + queryString);\r\n    lastLoadSnapshot.ranks = getSkillRanksForSeason(R6MStatsControls.seasons.get($controls.seasons));\r\n\r\n    $outputs.opSection.empty();\r\n    $outputs.mapSection.empty();\r\n\r\n    $('body').removeClass('not-loaded-yet');\r\n    $sections.maps.addClass('load-in-progress');\r\n    $sections.ops.addClass('load-in-progress');\r\n    $('body').addClass('load-in-progress');\r\n    disableLoadControl();\r\n\r\n    savePlatformOption(R6MStatsControls.platforms.get($controls.platforms));\r\n    sendLoadStatsAnalyticsEvent(queryString);\r\n\r\n    renderLoadInfo($('#loaded-summary'));\r\n\r\n    R6MStatsApi.getMapAndOperators(\r\n      handleApiMapSuccess,\r\n      handleApiMapError,\r\n      handleApiOpSuccess,\r\n      handleApiOpError,\r\n      handleApiAllSuccess,\r\n      queryString,\r\n      metaData\r\n    );\r\n  };\r\n\r\n  var handleMapChange = function handleMapChange() {\r\n    var selectedSeason = R6MStatsControls.seasons.get($controls.seasons),\r\n      selectedMap = R6MStatsControls.maps.get($controls.maps);\r\n\r\n    R6MStatsControls.modes.update(\r\n      $controls.modes,\r\n      metaData.modes,\r\n      metaData.mapModeLocations,\r\n      selectedSeason,\r\n      selectedMap\r\n    );\r\n    R6MStatsControls.locations.update(\r\n      $controls.locations,\r\n      metaData.mapModeLocations,\r\n      selectedSeason,\r\n      selectedMap,\r\n      R6MStatsControls.modes.get($controls.modes)\r\n    );\r\n    enableLoadControl();\r\n  };\r\n\r\n  var handleSeasonChange = function handleSeasonChange() {\r\n    var selectedSeason = R6MStatsControls.seasons.get($controls.seasons);\r\n\r\n    R6MStatsControls.platforms.update(\r\n      $controls.platforms,\r\n      metaData.platforms,\r\n      selectedSeason\r\n    );\r\n\r\n    R6MStatsControls.maps.update(\r\n      $controls.maps,\r\n      metaData.mapModeLocations,\r\n      selectedSeason\r\n    );\r\n    handleMapChange();\r\n\r\n    R6MStatsControls.ranks.setup(\r\n      $controls.ranks,\r\n      metaData.ranks,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      handleSkillRankChange\r\n    );\r\n    handleSkillRankChange();\r\n\r\n    enableLoadControl();\r\n  };\r\n\r\n  var handleSkillRankChange = function handleSkillRankChange() {\r\n    var selectedSkillRanks = R6MStatsControls.ranks.get($controls.ranks);\r\n\r\n    $ranksShowHider.removeClass();\r\n    selectedSkillRanks.forEach(function(rank) {\r\n      $ranksShowHider.addClass('show-' + metaData.ranks[rank].cssClass);\r\n    });\r\n    saveSkillRankOptions(selectedSkillRanks);\r\n  };\r\n\r\n  var renderLoadInfo = function renderLoadInfo($infoEl) {\r\n    R6MStatsRender.renderLoadInfo($infoEl, lastLoadSnapshot.filters, metaData);\r\n  };\r\n\r\n  var renderOpStats = function renderOpStats() {\r\n    R6MStatsOpRender.render(\r\n      R6MStatsOpData.get(),\r\n      $outputs.opSection,\r\n      metaData.ranks,\r\n      metaData.roles,\r\n      metaData.statTypes,\r\n      lastLoadSnapshot.ranks,\r\n      resortOperators,\r\n      updateOpRoleChart,\r\n      R6MStatsRender.getFormattedNumber\r\n    );\r\n  };\r\n\r\n  var resortOperators = function resortOperators(sortField, isDescending, sortRank) {\r\n    R6MStatsOpData.trySort(sortField, isDescending, sortRank);\r\n    renderOpStats();\r\n    saveOperatorsSortField(sortField, isDescending, sortRank);\r\n  };\r\n\r\n  var saveOperatorsSortField = function saveOperatorsSortField(sortField, isDescending, optionalRank) {\r\n    localStorage.setItem('statssortfield', sortField + ',' + isDescending + ',' + optionalRank);\r\n  };\r\n\r\n  var savePlatformOption = function savePlatformOption(platformOption) {\r\n    localStorage.setItem('statsplatform', platformOption);\r\n  };\r\n\r\n  var saveSkillRankOptions = function saveSkillRankOptions(selectedSkillRanks) {\r\n    localStorage.setItem('statsskillrankoptions', selectedSkillRanks.join());\r\n  };\r\n\r\n  var setupControls = function setupControls() {\r\n    R6MStatsControls.seasons.setup(\r\n      $controls.seasons,\r\n      metaData.seasons,\r\n      handleSeasonChange\r\n    );\r\n    R6MStatsControls.seasons.trySelect($controls.seasons, R6MHelpers.queryString(QUERY_PARAMS.SEASON));\r\n\r\n    R6MStatsControls.platforms.setup(\r\n      $controls.platforms,\r\n      metaData.platforms,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      enableLoadControl\r\n    );\r\n    tryLoadSavedPlatformOption();\r\n    R6MStatsControls.platforms.trySelect($controls.platforms, R6MHelpers.queryString(QUERY_PARAMS.PLATFORM));\r\n\r\n    R6MStatsControls.maps.setup(\r\n      $controls.maps,\r\n      metaData.mapModeLocations,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      handleMapChange\r\n    );\r\n    R6MStatsControls.maps.trySelect($controls.maps, R6MHelpers.queryString(QUERY_PARAMS.MAP));\r\n\r\n    R6MStatsControls.modes.setup(\r\n      $controls.modes,\r\n      metaData.modes,\r\n      metaData.mapModeLocations,\r\n      handleGameModeChange,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      R6MStatsControls.maps.get($controls.maps)\r\n    );\r\n    R6MStatsControls.modes.trySelect($controls.modes, R6MHelpers.queryString(QUERY_PARAMS.MODE));\r\n\r\n    R6MStatsControls.locations.setup(\r\n      $controls.locations,\r\n      metaData.mapModeLocations,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      R6MStatsControls.maps.get($controls.maps),\r\n      R6MStatsControls.modes.get($controls.modes),\r\n      enableLoadControl\r\n    );\r\n    R6MStatsControls.locations.trySelect($controls.locations, R6MHelpers.queryString(QUERY_PARAMS.LOCATION));\r\n\r\n    R6MStatsControls.ranks.setup(\r\n      $controls.ranks,\r\n      metaData.ranks,\r\n      R6MStatsControls.seasons.get($controls.seasons),\r\n      handleSkillRankChange\r\n    );\r\n    tryLoadSavedSkillRankOptions();\r\n    handleSkillRankChange();\r\n\r\n    $loadButton.html(statTerms.loadButtonText);\r\n    $loadButton.on('click', handleLoadButtonClick);\r\n  };\r\n\r\n  var setupOpChart = function setupOpChart() {\r\n    $opChart.close.on('click', closeOpChart);\r\n    $opChart.root.on('click', function(e) {\r\n      if ($(e.target).attr('id') == 'op-chart') {\r\n        closeOpChart();\r\n      }\r\n    });\r\n  };\r\n\r\n  var sendLoadStatsAnalyticsEvent = function sendLoadStatsAnalyticsEvent(queryString) {\r\n    ga('send', {\r\n      hitType: 'event',\r\n      eventCategory: 'Controls',\r\n      eventAction: 'LoadStats',\r\n      eventLabel: queryString\r\n    });\r\n  };\r\n\r\n  var updateOpRoleChart = function updateOpRoleChart(skillKey, roleKey) {\r\n    $('body').addClass('op-chart-open');\r\n    R6MStatsOpChart.updateOpRoleChart(\r\n      $opChart,\r\n      R6MStatsOpData.get(),\r\n      skillKey,\r\n      roleKey,\r\n      lastLoadSnapshot.filters,\r\n      lastLoadSnapshot.ranks,\r\n      metaData,\r\n      R6MStatsRender.getFormattedNumber,\r\n      renderLoadInfo\r\n    );\r\n  };\r\n\r\n  var tryLoadOpSortField = function tryLoadOpSortField() {\r\n    var sortFieldOptions = localStorage.getItem('statssortfield'),\r\n      sortField,\r\n      optionalRank,\r\n      isDescending,\r\n      tempSplit;\r\n\r\n    if (sortFieldOptions) {\r\n      tempSplit = sortFieldOptions.split(',');\r\n      sortField = tempSplit[0];\r\n      isDescending = (tempSplit[1] == 'true');\r\n      optionalRank = tempSplit[2];\r\n    } else {\r\n      sortField = 'name'; //fallback\r\n    }\r\n    R6MStatsOpData.trySort(sortField, isDescending, optionalRank);\r\n  };\r\n\r\n  var tryLoadSavedPlatformOption = function tryLoadSavedPlatformOption() {\r\n    var platformOption = localStorage.getItem('statsplatform');\r\n\r\n    if (platformOption !== null) {\r\n      R6MStatsControls.platforms.trySelect($controls.platforms, platformOption);\r\n    }\r\n  };\r\n\r\n  var tryLoadSavedSkillRankOptions = function tryLoadSavedSkillRankOptions() {\r\n    var previouslySelectedSkillRanks = localStorage.getItem('statsskillrankoptions');\r\n\r\n    if (previouslySelectedSkillRanks) {\r\n      R6MStatsControls.ranks.trySelect(\r\n        $controls.ranks,\r\n        previouslySelectedSkillRanks.split(',')\r\n      );\r\n    }\r\n  };\r\n}));\r\n"]}